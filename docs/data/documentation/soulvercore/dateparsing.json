{"seeAlsoSections":[{"identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/DataParsing"],"title":"String extensions for quick data parsing","generated":true,"anchor":"String-extensions-for-quick-data-parsing"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/soulvercore\/dateparsing"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"Motivation","text":"Motivation"},{"inlineContent":[{"type":"text","text":"Natural language date input features can be found in apps like "},{"type":"reference","isActive":true,"identifier":"https:\/\/culturedcode.com\/things\/support\/articles\/9780167\/"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"https:\/\/flexibits.com\/fantastical-ios\/help\/adding"},{"type":"text","text":" and "},{"type":"reference","identifier":"https:\/\/www.raycast.com\/extensions\/reminders","isActive":true},{"type":"text","text":" and make the user experience better."}],"type":"paragraph"},{"level":2,"anchor":"Usage","type":"heading","text":"Usage"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"SoulverCore"},{"type":"text","text":" adds a single property "},{"code":"dateValue","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":":"}]},{"syntax":"swift","code":["public extension String {","   var dateValue: Date?","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Use this property to extract the last natural language date found in the string. The "},{"type":"codeVoice","code":"dateValue"},{"text":" will be ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if there are no dates in the string.","type":"text"}],"type":"paragraph"},{"anchor":"SoulverCore-vs-Foundations-DataDetector","text":"SoulverCore vs Foundation’s DataDetector","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Apple’s Foundation framework includes NSDataDetector for detecting dates in strings."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example:"}]},{"code":["let expression = \"March 5th, 2023\"","let types: NSTextCheckingResult.CheckingType = [.date ]","let detector = try! NSDataDetector(types: types.rawValue)","let match = detector.matches(in: expression, options: .init(rawValue: 0), range: NSRange(location: 0, length: expression.count)).first","let date = match?.date"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Compare this to SoulverCore:","type":"text"}]},{"syntax":"swift","code":["let date = \"March 5th, 2023\".dateValue"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"In addition to a much nicer API, SoulverCore also adds a number of additional features not supported by NSDataDetector."}],"type":"paragraph"},{"text":"Supported Features","anchor":"Supported-Features","level":2,"type":"heading"},{"text":"Natural language calendar math","anchor":"Natural-language-calendar-math","type":"heading","level":4},{"type":"paragraph","inlineContent":[{"text":"Use natural language phrases like “3 weeks from tomorrow” and “march 12 + 4 weeks 3 days”.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"SoulverCore supports a large range of different natural language date syntaxes. See the ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/documentation.soulver.app\/syntax-reference\/dates-and-times"},{"type":"text","text":" for more examples."}]},{"level":4,"type":"heading","text":"Units & unit shorthands","anchor":"Units--unit-shorthands"},{"inlineContent":[{"text":"SoulverCore interprets units of time as referring to a future date after the specified amount of time has passed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example "},{"code":"2 weeks 2 days","type":"codeVoice"},{"type":"text","text":" will be interpreted as "},{"code":"2 weeks and 2 days","type":"codeVoice"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"text":"from now","type":"text"}]},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following time unit shorthands are also supported:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“1y” (1 year)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"“5mo” (5 months)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“3w” (3 weeks)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“2d” (2 days)"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Shorthands can be combined together:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"“12-9 9p” means the “12th of September at 9pm” (in a non-US locale)","type":"text"}]}]}]},{"type":"heading","level":4,"text":"Half-formed dates","anchor":"Half-formed-dates"},{"inlineContent":[{"type":"text","text":"Examples:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“3\/12” (Dec 3, or March 12 in the US)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"“12.2” (Feb 12 or Dec 2 in the US)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"“9-5” (May 9 or Sep 5 in the US)"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Day--month-shorthands","text":"Day & month shorthands","level":4},{"type":"paragraph","inlineContent":[{"text":"Examples:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"“Next mon” (next monday)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“tod” (today)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"“apr3” (April 3)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“yes” (yesterday)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"“tom” (tomorrow)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"AM\/PM shorthands","type":"heading","anchor":"AMPM-shorthands","level":4},{"inlineContent":[{"text":"Examples:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“3p” (3pm)"}]}]},{"content":[{"inlineContent":[{"text":"“5a” (5am)","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","text":"Random words ignored","level":4,"anchor":"Random-words-ignored"},{"inlineContent":[{"text":"SoulverCore extracts the last date present in the given string, and ignores random words before and after it.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, the following are valid inputs:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"“Tom’s birthday party ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"this sunday"}]},{"type":"text","text":"”"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"“Schedule the meeting for ","type":"text"},{"inlineContent":[{"text":"April 21st next year","type":"text"}],"type":"strong"},{"text":"”","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“"},{"type":"strong","inlineContent":[{"text":"June 5","type":"text"}]},{"type":"text","text":" the kids get off school”"}]}]}],"type":"unorderedList"},{"level":2,"anchor":"Detailed-information-about-the-parsed-date","text":"Detailed information about the parsed date","type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Datestamp\/DatestampType","type":"reference","isActive":true},{"type":"text","text":" enum contains detailed information about the kind of date detected and what date components were explicitly specified."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Here is how an example of how to get the formatting and components of the detected date:"}],"type":"paragraph"},{"code":["var engineCustomization = EngineCustomization.standard","engineCustomization.featureFlags.seeksFutureDate = true","let calculator = Calculator(customization: engineCustomization)","","if let datestampType = calculator.dateFor(inputDateText)?.result.evaluationResult.datestampValue?.type {","    print(\"Date of type \\(datestampType)\")","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"text":"Performance","anchor":"Performance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SoulverCore is very efficient and can perform thousands of date-from-string extractions every second."}]},{"anchor":"Localizations","type":"heading","level":2,"text":"Localizations"},{"inlineContent":[{"type":"text","text":"In addition to English, SoulverCore is localized into German, French, Spanish, Russian & Simplified Chinese."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The user’s system locale will be used for date parsing, and date & time formats specific the particular region are taken into account."}],"type":"paragraph"}]}],"kind":"article","sections":[],"abstract":[{"type":"text","text":"Add a natural language date scheduling feature to your Mac or iOS calendar or reminders app"}],"metadata":{"title":"Natural language date parsing","roleHeading":"Article","modules":[{"name":"SoulverCore"}],"role":"article"},"identifier":{"url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/DateParsing","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore"]]},"references":{"https://culturedcode.com/things/support/articles/9780167/":{"url":"https:\/\/culturedcode.com\/things\/support\/articles\/9780167\/","title":"Things","type":"link","identifier":"https:\/\/culturedcode.com\/things\/support\/articles\/9780167\/","titleInlineContent":[{"text":"Things","type":"text"}]},"https://flexibits.com/fantastical-ios/help/adding":{"url":"https:\/\/flexibits.com\/fantastical-ios\/help\/adding","identifier":"https:\/\/flexibits.com\/fantastical-ios\/help\/adding","title":"Fantastical","titleInlineContent":[{"type":"text","text":"Fantastical"}],"type":"link"},"https://www.raycast.com/extensions/reminders":{"url":"https:\/\/www.raycast.com\/extensions\/reminders","identifier":"https:\/\/www.raycast.com\/extensions\/reminders","title":"Raycast","titleInlineContent":[{"text":"Raycast","type":"text"}],"type":"link"},"doc://app.soulver.core/documentation/SoulverCore":{"title":"SoulverCore","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","role":"collection","abstract":[{"text":"A powerful natural language calculation engine","type":"text"}],"type":"topic","url":"\/documentation\/soulvercore","kind":"symbol"},"doc://app.soulver.core/documentation/SoulverCore/DataParsing":{"url":"\/documentation\/soulvercore\/dataparsing","kind":"article","abstract":[{"type":"text","text":"A declarative & type-safe approach to extracting various data types out of strings"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/DataParsing","title":"Data from string parsing","role":"article","type":"topic"},"https://documentation.soulver.app/syntax-reference/dates-and-times":{"url":"https:\/\/documentation.soulver.app\/syntax-reference\/dates-and-times","identifier":"https:\/\/documentation.soulver.app\/syntax-reference\/dates-and-times","title":"Soulver Documentation","titleInlineContent":[{"type":"text","text":"Soulver Documentation"}],"type":"link"},"doc://app.soulver.core/documentation/SoulverCore/Datestamp/DatestampType":{"kind":"symbol","type":"topic","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Datestamp\/DatestampType","navigatorTitle":[{"text":"DatestampType","kind":"identifier"}],"role":"symbol","url":"\/documentation\/soulvercore\/datestamp\/datestamptype","abstract":[{"type":"text","text":"The types of datestamps supported by SoulverCore"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"DatestampType","kind":"identifier"}],"title":"Datestamp.DatestampType"}}}