{"sections":[],"kind":"symbol","metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"modules":[{"name":"SoulverCore","relatedModules":["Swift"]}],"role":"symbol","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:11SoulverCore14CustomFunctionV","symbolKind":"op","roleHeading":"Operator","title":"!=(_:_:)","extendedModule":"Swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}]}],"variants":[{"paths":["\/documentation\/soulvercore\/customfunction\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CustomFunction","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CustomFunction\/Equatable-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"Equatable.!=(_:_:)","type":"codeVoice"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CustomFunction\/!=(_:_:)"},"references":{"doc://app.soulver.core/documentation/SoulverCore/CustomFunction/Equatable-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/soulvercore\/customfunction\/equatable-implementations","title":"Equatable Implementations","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CustomFunction\/Equatable-Implementations","abstract":[]},"doc://app.soulver.core/documentation/SoulverCore":{"url":"\/documentation\/soulvercore","abstract":[{"text":"A powerful natural language calculation engine","type":"text"}],"type":"topic","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","kind":"symbol","title":"SoulverCore","role":"collection"},"doc://app.soulver.core/documentation/SoulverCore/CustomFunction":{"abstract":[{"text":"A custom function is a phrase with a syntax you come up with and a block to provide a result given some parameters","type":"text"}],"navigatorTitle":[{"text":"CustomFunction","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CustomFunction","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomFunction"}],"title":"CustomFunction","url":"\/documentation\/soulvercore\/customfunction","kind":"symbol","type":"topic","role":"symbol"},"doc://app.soulver.core/documentation/SoulverCore/CustomFunction/!=(_:_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","url":"\/documentation\/soulvercore\/customfunction\/!=(_:_:)","abstract":[],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CustomFunction\/!=(_:_:)","type":"topic","title":"!=(_:_:)","kind":"symbol"}}}