{"metadata":{"modules":[{"name":"SoulverCore"}],"title":"Getting Started with SoulverCore","roleHeading":"Article","role":"article"},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/GettingStarted","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To calculate the result of a single expression, use a "},{"isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator","type":"reference"},{"type":"text","text":" object:"}]},{"syntax":"swift","code":["import SoulverCore","","let calculator = Calculator(customization: .standard)","let result = calculator.calculate(\"123 + 456\")","print(\"The answer is \\(result.stringValue)\") \/\/ prints 579"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SoulverCore can perform all sorts of calculations, including unit conversions, date & calendar math, rate calculations, percentage phrase functions, time zone conversions, and much more. It also cleverly ignores “meaningless” words:"}]},{"type":"codeListing","syntax":"swift","code":["calculator.calculate(\"$10 for lunch + 15% tip\") \/\/ $11.50","calculator.calculate(\"65 kg in pounds\") \/\/ 143.3 lb","calculator.calculate(\"40 as % of 90\") \/\/ 44.44%","calculator.calculate(\"$150 is 25% on what\") \/\/ $120","calculator.calculate(\"$25\/hour * 14 hours of work\") \/\/ $350.00","calculator.calculate(\"January 30 2020 + 3 months 2 weeks 5 days\") \/\/ May 19, 2020","calculator.calculate(\"9:35am in New York to Japan\") \/\/ 10:35 pm","calculator.calculate(\"$25k over 10 years at 7.5%\") \/\/ $51,525.79 (compound interest)"]},{"anchor":"Variables","level":2,"type":"heading","text":"Variables"},{"inlineContent":[{"type":"text","text":"Use a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/VariableList"},{"type":"text","text":" to set values for words or phrases in your expression:"}],"type":"paragraph"},{"code":["let variableList = VariableList(variables:","    [","        Variable(name: \"a\", value: \"123\"),","        Variable(name: \"b\", value: \"456\"),","    ]",")","calculator.calculate(\"a + b\", with: variableList) \/\/ 579        "],"type":"codeListing","syntax":"swift"},{"level":2,"anchor":"Locale-Settings","type":"heading","text":"Locale Settings"},{"type":"paragraph","inlineContent":[{"text":"SoulverCore respects the decimal separator and thousands separator of the system locale. Alternatively, you can convert the standard EngineCustomization to another locale:","type":"text"}]},{"syntax":"swift","code":["let europeanLocale = Locale(identifier: \"en_DE\")","let localizedCustomization = EngineCustomization.standard.convertTo(locale: europeanLocale)","","let calculator = Calculator(customization: localizedCustomization)",""," \/\/\/ In Germany a comma is used as a decimal separator","calculator.calculate(\"1,2 + 3,4\") \/\/ 4,6"],"type":"codeListing"},{"level":2,"text":"Output Formatting","anchor":"Output-Formatting","type":"heading"},{"inlineContent":[{"type":"text","text":"Use a "},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/FormattingPreferences","type":"reference","isActive":true},{"type":"text","text":" to customize the way your result is formatted (how many decimal places to include, should the thousands separator be inserted, etc)."}],"type":"paragraph"},{"type":"codeListing","code":["var formattingPreferences = FormattingPreferences()","formattingPreferences.dp = 2 \/\/ decimal places","calculator.formattingPreferences = formattingPreferences","","calculator.calculate(\"π\") \/\/ 3.14"],"syntax":"swift"},{"anchor":"Live-Real-World--Crypto-Currency-Rates","level":2,"type":"heading","text":"Live Real-World & Crypto-Currency Rates"},{"inlineContent":[{"type":"text","text":"A standard "},{"type":"reference","isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization"},{"type":"text","text":" uses hard-coded rates for 190 real-world & crypto-currencies. You can (and should) provide SoulverCore with up-to-date rates by setting the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization\/currencyRateProvider"},{"type":"text","text":" on your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization"},{"text":" to an object that conforms to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"SoulverCore includes one ","type":"text"},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider","type":"reference","isActive":true},{"text":" you can use to fetch rates from the ","type":"text"},{"type":"reference","identifier":"https:\/\/www.ecb.europa.eu\/stats\/eurofxref\/","isActive":true},{"type":"text","text":" for 33 popular fiat currencies."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/\/ This is a currency rate provider that fetches 33 popular fiat currencies from the European Central Bank, no API key required","let ecbCurrencyRateProvider = ECBCurrencyRateProvider()","","\/\/\/ Create a customization with this rate provider","var customizationWithLiveCurrencyRates = EngineCustomization.standard","customizationWithLiveCurrencyRates.currencyRateProvider = ecbCurrencyRateProvider","","\/\/\/ Create a calculator that uses this customization","let calculator = Calculator(customization: customizationWithLiveCurrencyRates)","","\/\/\/ Update to the latest rates...","ecbCurrencyRateProvider.updateRates { success in","    if success {","        \/\/ The standard customization will now have access to the latest currency rates","        let result = calculator.calculate(\"10 USD in EUR\")","        print(result.stringValue)","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"You can create your own object that conforms to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider"},{"type":"text","text":" to provide rates for the currency codes you support. The "},{"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider","isActive":true},{"text":" protocol has a single method that returns the amount of a given currency that 1.0 USD can buy:","type":"text"}]},{"syntax":"swift","code":["func rateFor(request: CurrencyRateRequest) -> Decimal? {","","    let currencyCode = request.currencyCode \/\/ EUR, GBP, BTC, etc","","    \/\/\/ - Return an up-to-date rate in the form of how much 1 USD can purchase of the requested currency (i.e 1 USD = x EUR?)","    \/\/\/ - If your rates are in terms of how much USD the requested currency can purchase (i.e 1 EUR = x USD?), remember to take the inverse by dividing 1 by your rate","            ","    return <# Currency Rate #>","}"],"type":"codeListing"},{"inlineContent":[{"text":"Rates are only requested from a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider"},{"text":" at evaluation-time, so you don’t need to recreate or ","type":"text"},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator","type":"reference","isActive":true},{"text":" with a new ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization"},{"text":" when your currency rate data source is updated. However you must reevaluate your line or expression: the latest rates for any currencies used will be fetched from your provider, if necessary.","type":"text"}],"type":"paragraph"},{"text":"Custom Units","level":2,"type":"heading","anchor":"Custom-Units"},{"inlineContent":[{"type":"text","text":"You can add custom units to an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization"},{"type":"text","text":" object required by the initializer on "},{"isActive":true,"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator"}],"type":"paragraph"},{"code":["\/\/\/ A good omakase EngineCustomization (the same used by Soulver.app)","var customization: EngineCustomization = .standard","","\/\/\/ Set an array of custom units defined in terms of an existing unit in SoulverCore","customization.customUnits = [","    CustomUnit(name: \"parrots\", definition: 15, equivalentUnit: .centimeters),","    CustomUnit(name: \"python\", definition: 570, equivalentUnit: .centimeters)","]","","\/\/\/ Create a Calculator using this customization","let calculator = Calculator(customization: customization)","","\/\/\/ python and parrots are now recognized as units","calculator.calculate(\"1 python in parrots\") \/\/ 38 parrots"],"syntax":"swift","type":"codeListing"},{"anchor":"Custom-Functions","type":"heading","level":2,"text":"Custom Functions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The syntax of a function in SoulverCore is flexible. We support traditional C-style “func(x)” functions, Swift-style “calculate(withParameter: x)” functions, or even natural phrases like “calculate x”."}]},{"inlineContent":[{"type":"text","text":"You can add custom functions objects to the "},{"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization","isActive":true},{"type":"text","text":" required by the initializer on "},{"isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator","type":"reference"},{"text":". Here is an example of a custom function that takes 1 off a given number:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["","\/\/\/ Get the default Engine Customization","var customization: EngineCustomization = .standard","","\/\/\/ A prototype expression is an example of what the user will type to invoke your function","\/\/\/ The following function will trigger for any phrase with the form 'number before x', where x is some number","","customization.customFunctions = [CustomFunction(prototypeExpression: \"number before 9\", handler: { parameters in","    ","    guard let parameterDecimalValue = parameters[0].decimalValue else {","        return EvaluationResult.none","    }","    ","    return .decimal(parameterDecimalValue - 1.0)","    ","})]","","let calculator = Calculator(customization: customization)","let result = calculator.calculate(\"number before 35\")","","print(result.stringValue) \/\/ prints '34'"],"type":"codeListing"},{"level":2,"text":"Variable Declarations","anchor":"Variable-Declarations","type":"heading"},{"inlineContent":[{"type":"text","text":"A variable declaration is any phrase followed by equals and a value (i.e, “total expenses = 123”)."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Variable declarations are off by default, but can be enabled on your "},{"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization","isActive":true},{"text":" and used on ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/LineCollection","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["var customization: EngineCustomization = .standard","","\/\/\/ Add the variable declarations feature","customization.featureFlags.variableDeclarations = true","","\/\/\/ Use this customization with a new Calculator object","let calculator = Calculator(customization: customization)","_ = calculator.calculate(\"tax = 25%\")","let result = calculator.calculate(\"tax of $45k\") \/\/ $11,250.00",""]},{"anchor":"Localizations","text":"Localizations","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"In addition to English, SoulverCore is fully localized into German, Russian, French, Spanish & simplified Chinese.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The various number & date formats of these various locales are also fully supported."}]},{"inlineContent":[{"text":"Also note that non-English languages are ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"additive"}]},{"type":"text","text":", meaning that, for instance, a German user would be able to use both English & German syntaxes."}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Create a calculator and customize calculation & result formatting"}],"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/soulvercore\/gettingstarted"]},{"paths":["\/documentation\/soulvercore\/gettingstarted"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"article","sections":[],"references":{"doc://app.soulver.core/documentation/SoulverCore/LineCollection":{"type":"topic","kind":"symbol","url":"\/documentation\/soulvercore\/linecollection","title":"LineCollection","abstract":[{"type":"text","text":"Perform calculations across multiple lines"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LineCollection","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LineCollection"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/LineCollection"},"https://www.ecb.europa.eu/stats/eurofxref/":{"titleInlineContent":[{"type":"text","text":"European Central Bank"}],"url":"https:\/\/www.ecb.europa.eu\/stats\/eurofxref\/","title":"European Central Bank","identifier":"https:\/\/www.ecb.europa.eu\/stats\/eurofxref\/","type":"link"},"doc://app.soulver.core/documentation/SoulverCore/VariableList":{"role":"symbol","navigatorTitle":[{"text":"VariableList","kind":"identifier"}],"url":"\/documentation\/soulvercore\/variablelist","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VariableList","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/VariableList","title":"VariableList","type":"topic","abstract":[{"type":"text","text":"A list of variables (single words or phrases) and their values"}],"kind":"symbol"},"doc://app.soulver.core/documentation/SoulverCore/EngineCustomization":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EngineCustomization","kind":"identifier"}],"url":"\/documentation\/soulvercore\/enginecustomization","role":"symbol","abstract":[{"text":"A key SoulverCore model object used to customize how you want SoulverCore to interpret expressions","type":"text"}],"title":"EngineCustomization","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EngineCustomization"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization"},"doc://app.soulver.core/documentation/SoulverCore/FormattingPreferences":{"kind":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/FormattingPreferences","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FormattingPreferences","kind":"identifier"}],"type":"topic","url":"\/documentation\/soulvercore\/formattingpreferences","navigatorTitle":[{"kind":"identifier","text":"FormattingPreferences"}],"title":"FormattingPreferences","abstract":[{"text":"A configuration object used to specify how you want SoulverCore to format results","type":"text"}],"role":"symbol"},"doc://app.soulver.core/documentation/SoulverCore/EngineCustomization/currencyRateProvider":{"abstract":[{"type":"text","text":"Provide an object that conforms to "},{"code":"CurrencyRateProvider","type":"codeVoice"},{"type":"text","text":" to enable live currency rates in calculations"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization\/currencyRateProvider","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"currencyRateProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SoulverCore20CurrencyRateProviderP","text":"CurrencyRateProvider"},{"kind":"text","text":"?"}],"url":"\/documentation\/soulvercore\/enginecustomization\/currencyrateprovider","title":"currencyRateProvider","type":"topic"},"doc://app.soulver.core/documentation/SoulverCore/CurrencyRateProvider":{"title":"CurrencyRateProvider","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CurrencyRateProvider"}],"url":"\/documentation\/soulvercore\/currencyrateprovider","abstract":[{"text":"CurrencyRateProvider is an object that provides currency rates to be used in unit calculations","type":"text"}],"navigatorTitle":[{"text":"CurrencyRateProvider","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider","kind":"symbol","type":"topic"},"doc://app.soulver.core/documentation/SoulverCore":{"role":"collection","kind":"symbol","title":"SoulverCore","abstract":[{"text":"A powerful natural language calculation engine","type":"text"}],"type":"topic","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","url":"\/documentation\/soulvercore"},"doc://app.soulver.core/documentation/SoulverCore/Calculator":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Calculator"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator","kind":"symbol","title":"Calculator","role":"symbol","navigatorTitle":[{"text":"Calculator","kind":"identifier"}],"type":"topic","abstract":[{"text":"Evaluate natural language mathematical expressions","type":"text"}],"url":"\/documentation\/soulvercore\/calculator"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"value":null,"path":"\/topicSections","op":"add"},{"path":"\/seeAlsoSections","value":null,"op":"add"}]}]}