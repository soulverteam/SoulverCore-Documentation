{"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line"]]},"abstract":[{"type":"text","text":"A regular line, a comment or a variable declaration, etc"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApparentLineType","kind":"identifier"}],"languages":["swift"]}]},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The line type is derived from the expression at parse-time, it’s not explicitly set (that’s why it’s apparent)"}]}],"kind":"content"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/assertion","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/comment","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/divider","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/header","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/regular","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/variableDeclaration"],"generated":true,"title":"Enumeration Cases","anchor":"Enumeration-Cases"},{"identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/Equatable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"metadata":{"symbolKind":"enum","modules":[{"name":"SoulverCore"}],"role":"symbol","externalID":"s:11SoulverCore4LineV08ApparentC4TypeO","roleHeading":"Enumeration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApparentLineType","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ApparentLineType"}],"title":"Line.ApparentLineType"},"identifier":{"url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/app.soulver.core\/SQ","doc:\/\/app.soulver.core\/SH","doc:\/\/app.soulver.core\/s8SendableP"],"title":"Conforms To"}],"variants":[{"paths":["\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://app.soulver.core/documentation/SoulverCore/Line/ApparentLineType-swift.enum/assertion":{"type":"topic","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/assertion","url":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/assertion","abstract":[{"text":"A line using the assert function to check if a condition is true","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertion","kind":"identifier"}],"title":"Line.ApparentLineType.assertion"},"doc://app.soulver.core/documentation/SoulverCore/Line/ApparentLineType-swift.enum/regular":{"url":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/regular","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"regular","kind":"identifier"}],"abstract":[],"type":"topic","kind":"symbol","title":"Line.ApparentLineType.regular","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/regular"},"doc://app.soulver.core/documentation/SoulverCore":{"title":"SoulverCore","type":"topic","kind":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","role":"collection","url":"\/documentation\/soulvercore","abstract":[{"type":"text","text":"A powerful natural language calculation engine"}]},"doc://app.soulver.core/documentation/SoulverCore/Line":{"url":"\/documentation\/soulvercore\/line","abstract":[{"type":"text","text":"A basic model object representing an expression and result"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Line","kind":"identifier"}],"navigatorTitle":[{"text":"Line","kind":"identifier"}],"role":"symbol","title":"Line","type":"topic"},"doc://app.soulver.core/documentation/SoulverCore/Line/ApparentLineType-swift.enum/comment":{"title":"Line.ApparentLineType.comment","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/comment","abstract":[{"text":"A line with the form: \/\/ this is a comment","type":"text"}],"kind":"symbol","url":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/comment","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"comment","kind":"identifier"}]},"doc://app.soulver.core/documentation/SoulverCore/Line/ApparentLineType-swift.enum/divider":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"divider","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/divider","kind":"symbol","url":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/divider","role":"symbol","type":"topic","title":"Line.ApparentLineType.divider","abstract":[{"text":"A special line that divides content","type":"text"}]},"doc://app.soulver.core/documentation/SoulverCore/Line/ApparentLineType-swift.enum/variableDeclaration":{"url":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/variabledeclaration","type":"topic","kind":"symbol","abstract":[{"text":"A line with the form: a = 123","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"variableDeclaration","kind":"identifier"}],"title":"Line.ApparentLineType.variableDeclaration","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/variableDeclaration","role":"symbol"},"doc://app.soulver.core/documentation/SoulverCore/Line/ApparentLineType-swift.enum/header":{"url":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/header","title":"Line.ApparentLineType.header","role":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"header","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/header","abstract":[{"type":"text","text":"A line with the form: ### this is a header"}],"kind":"symbol"},"doc://app.soulver.core/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/app.soulver.core\/s8SendableP","title":"Swift.Sendable"},"doc://app.soulver.core/documentation/SoulverCore/Line/ApparentLineType-swift.enum/Equatable-Implementations":{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum\/Equatable-Implementations","role":"collectionGroup","abstract":[],"title":"Equatable Implementations","type":"topic","kind":"article","url":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/equatable-implementations"},"doc://app.soulver.core/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/app.soulver.core\/SQ"},"doc://app.soulver.core/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/app.soulver.core\/SH"},"doc://app.soulver.core/documentation/SoulverCore/Line/ApparentLineType-swift.enum":{"role":"symbol","navigatorTitle":[{"text":"ApparentLineType","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Line\/ApparentLineType-swift.enum","url":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApparentLineType","kind":"identifier"}],"abstract":[{"text":"A regular line, a comment or a variable declaration, etc","type":"text"}],"title":"Line.ApparentLineType"}}}