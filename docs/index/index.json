{"includedArchiveIdentifiers":["app.soulver.core"],"interfaceLanguages":{"occ":[{"children":[{"title":"Introduction","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/gettingstarted","title":"Getting Started with SoulverCore","type":"article"},{"title":"Sample projects","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/samplecalculator","title":"Mac & iOS Sample Code","type":"sampleCode"},{"path":"\/documentation\/soulvercore\/textviewintegration","title":"Add calculation to NSTextView or UITextView","type":"sampleCode"},{"title":"String extensions for quick data parsing","type":"groupMarker"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/asynchronousoperation\/asynchronous","title":"asynchronous","type":"property"},{"path":"\/documentation\/soulvercore\/asynchronousoperation\/executing","title":"executing","type":"property"},{"path":"\/documentation\/soulvercore\/asynchronousoperation\/finished","title":"finished","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/asynchronousoperation\/init","title":"init","type":"method"},{"path":"\/documentation\/soulvercore\/asynchronousoperation\/main","title":"main","type":"method"},{"path":"\/documentation\/soulvercore\/asynchronousoperation\/start","title":"start","type":"method"}],"path":"\/documentation\/soulvercore\/asynchronousoperation","title":"AsynchronousOperation","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/backgroundevaluationandmergingoperation\/main","title":"main","type":"method"}],"path":"\/documentation\/soulvercore\/backgroundevaluationandmergingoperation","title":"BackgroundEvaluationAndMergingOperation","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/dependenciesevaluationandmergingoperation\/main","title":"main","type":"method"}],"path":"\/documentation\/soulvercore\/dependenciesevaluationandmergingoperation","title":"DependenciesEvaluationAndMergingOperation","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/soulvercoreversionnumber","title":"SoulverCoreVersionNumber","type":"var"},{"path":"\/documentation\/soulvercore\/soulvercoreversionstring","title":"SoulverCoreVersionString","type":"var"}],"path":"\/documentation\/soulvercore","title":"SoulverCore","type":"module"}],"swift":[{"children":[{"title":"Introduction","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/gettingstarted","title":"Getting Started with SoulverCore","type":"article"},{"title":"Sample projects","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/samplecalculator","title":"Mac & iOS Sample Code","type":"sampleCode"},{"path":"\/documentation\/soulvercore\/textviewintegration","title":"Add calculation to NSTextView or UITextView","type":"sampleCode"},{"title":"String extensions for quick data parsing","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/dateparsing","title":"Natural language date parsing","type":"article"},{"path":"\/documentation\/soulvercore\/dataparsing","title":"Data from string parsing","type":"article"},{"title":"Doing single-line calculations (like Spotlight)","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculator\/basic","title":"static var basic: Calculator","type":"property"},{"path":"\/documentation\/soulvercore\/calculator\/init(customization:)","title":"init(customization: EngineCustomization)","type":"init"},{"title":"Key properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculator\/customization","title":"var customization: EngineCustomization","type":"property"},{"title":"Customize result formatting","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculator\/formattingpreferences","title":"var formattingPreferences: FormattingPreferences?","type":"property"},{"title":"Calculating synchronously","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculator\/calculate(_:with:)","title":"func calculate(RawExpression, with: VariableList?) -> CalculationResult","type":"method"},{"title":"Calculating asynchronously","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculator\/calculateinbackground(_:with:)","title":"func calculateInBackground(RawExpression, with: VariableList?) async -> CalculationResult","type":"method"},{"title":"Parsing dates & date intervals out of a natural language expression","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculator\/datefor(_:with:)","title":"func dateFor(String, with: VariableList?) -> (date: Date, result: CalculationResult)?","type":"method"},{"path":"\/documentation\/soulvercore\/calculator\/dateintervalfor(_:with:)","title":"func dateIntervalFor(String, with: VariableList?) -> (dateInterval: DateInterval, result: CalculationResult)?","type":"method"},{"title":"Parsing the parameters out of a natural language expression","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculator\/functionparametersin(_:matching:customization:)","title":"class func functionParametersIn(String, matching: [PrototypeExpression], customization: EngineCustomization) -> [EvaluationResult]?","type":"method"}],"path":"\/documentation\/soulvercore\/calculator","title":"Calculator","type":"class"},{"title":"Doing multi-line calculations (like Soulver)","type":"groupMarker"},{"children":[{"title":"Creation","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/init(customization:)","title":"init(customization: EngineCustomization)","type":"init"},{"path":"\/documentation\/soulvercore\/linecollection\/basic","title":"static var basic: LineCollection","type":"property"},{"title":"Base properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/linesheet","title":"var lineSheet: LineSheet","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/customization","title":"var customization: EngineCustomization","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/lines","title":"var lines: [Line]","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/linecount","title":"var lineCount: Int","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/text","title":"var text: MultiLineText","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/deepcopy","title":"var deepCopy: LineCollection","type":"property"},{"title":"Changing locales or customizations","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/converttolocale(_:)","title":"func convertToLocale(Locale) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/set(customization:)","title":"func set(customization: EngineCustomization)","type":"method"},{"title":"Adding, inserting & moving lines","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/addline(_:)","title":"func addLine(String) -> Line","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/insert(line:at:)","title":"func insert(line: Line, at: LineIndex)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/insertlinebelow(lineindex:with:)","title":"func insertLineBelow(lineIndex: LineIndex, with: String)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/insertlineat(lineindex:with:)","title":"func insertLineAt(lineIndex: LineIndex, with: String)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/movelineat(lineindex:tolineindex:)","title":"func moveLineAt(lineIndex: LineIndex, toLineIndex: LineIndex)","type":"method"},{"title":"Deleting & replacing lines","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/removelineat(lineindex:)","title":"func removeLineAt(lineIndex: LineIndex)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/replacelineat(lineindex:with:)","title":"func replaceLineAt(lineIndex: LineIndex, with: Line)","type":"method"},{"title":"Setting expressions","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/setexpression(expression:forlineat:)","title":"func setExpression(expression: String, forLineAt: LineIndex)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/setlineswithexpressions(_:)","title":"func setLinesWithExpressions([RawExpression])","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/replaceoccurancesinexpressions(replacements:fortypes:)","title":"func replaceOccurancesInExpressions(replacements: [String : String], forTypes: Set<TokenType>?) -> IndexSet","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/append(otherlinecollection:)","title":"func append(otherLineCollection: LineCollection)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/replaceoccurancesinexpressions(replacements:fortypes:)","title":"func replaceOccurancesInExpressions(replacements: [String : String], forTypes: Set<TokenType>?) -> IndexSet","type":"method"},{"title":"Formatting results","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/defaultlineformattingpreferences","title":"var defaultLineFormattingPreferences: FormattingPreferences?","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/setformatting(formattingpreferences:)","title":"func setFormatting(formattingPreferences: FormattingPreferences)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/setformatting(formattingpreferences:forlineat:)","title":"func setFormatting(formattingPreferences: FormattingPreferences?, forLineAt: LineIndex)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/unformattedresultfor(lineindex:)","title":"func unformattedResultFor(lineIndex: LineIndex) -> String","type":"method"},{"title":"Evaluation","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/evaluateall()","title":"func evaluateAll()","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/evaluatelinesat(indexes:dependenciesupdatedhandler:)","title":"func evaluateLinesAt(indexes: IndexSet, dependenciesUpdatedHandler: EvaluatedLinesHandler?) -> IndexSet","type":"method"},{"title":"Observing evaluation","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/observeevaluationwith(handler:)","title":"func observeEvaluationWith(handler: EvaluatedLinesHandler) -> LineCollectionObserverToken","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/remove(observer:)","title":"func remove(observer: LineCollectionObserverToken)","type":"method"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/linecollectionobservertoken\/==(_:_:)","title":"static func == (LineCollectionObserverToken, LineCollectionObserverToken) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/linecollectionobservertoken\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/linecollectionobservertoken\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/linecollection\/linecollectionobservertoken\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/linecollection\/linecollectionobservertoken","title":"LineCollection.LineCollectionObserverToken","type":"class"},{"path":"\/documentation\/soulvercore\/linecollection\/evaluatedlineshandler","title":"LineCollection.EvaluatedLinesHandler","type":"typealias"},{"title":"Batch editing","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/beginchanges()","title":"func beginChanges()","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/endchangeswith(evaluationhandler:dependencieshandler:)","title":"func endChangesWith(evaluationHandler: EvaluatedLinesHandler?, dependenciesHandler: EvaluatedLinesHandler?)","type":"method"},{"title":"Customize behaviour","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/variablelist","title":"var variableList: VariableList?","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/includevariablesreferencingpreviousline","title":"var includeVariablesReferencingPreviousLine: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/includevariablesreferencinglinenumbers","title":"var includeVariablesReferencingLineNumbers: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/expressionbeautificationoptions","title":"var expressionBeautificationOptions: ExpressionBeautificationOptions?","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/commentingoptions","title":"var commentingOptions: CommentingOptions","type":"property"},{"title":"Undo support","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/performchanges(performblock:)","title":"func performChanges(performBlock: ((LineCollection) -> Void)) -> LineCollectionStateTicket","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/reverttostatewith(ticket:)","title":"func revertToStateWith(ticket: LineCollectionStateTicket) -> LineSheetDelta?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/clearstates()","title":"func clearStates()","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/linecollectionstateticket","title":"LineCollection.LineCollectionStateTicket","type":"typealias"},{"title":"Line References","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/makereferenceforlineat(lineindex:)","title":"func makeReferenceForLineAt(lineIndex: LineIndex) -> LineReference","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/clearreferenceforlineat(lineindex:)","title":"func clearReferenceForLineAt(lineIndex: LineIndex)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/lineforlinereference(linereference:)","title":"func lineForLineReference(lineReference: LineReference) -> Line?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/linefor(_:)","title":"func lineFor(Variable) -> Line?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/isvalidlinereference(uid:onlineat:)","title":"func isValidLineReference(UID: UID, onLineAt: LineIndex) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/previouslinereference","title":"static var previousLineReference: LineReference","type":"property"},{"title":"Subsheets","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/subsheetcount","title":"var subsheetCount: Int","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/addsubsheet(evaluator:canreferencevariablesoutsidebody:)","title":"func addSubsheet(evaluator: Subsheet.SubsheetEvaluatorType, canReferenceVariablesOutsideBody: Bool) -> LineReference","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/set(content:forsubsheetwith:)","title":"func set(content: LineSheet, forSubsheetWith: LineReference)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/subsheetwith(reference:)","title":"func subsheetWith(reference: LineReference) -> Subsheet?","type":"method"},{"title":"Statistics of lines","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/quicksum","title":"var quickSum: CalculationResult?","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/quickaverage","title":"var quickAverage: CalculationResult?","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/quickcount","title":"var quickCount: CalculationResult?","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/quicksumof(indexes:)","title":"func quickSumOf(indexes: IndexSet) -> CalculationResult?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/quickaverageof(indexes:)","title":"func quickAverageOf(indexes: IndexSet) -> CalculationResult?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/quickcountof(indexes:)","title":"func quickCountOf(indexes: IndexSet) -> CalculationResult?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/calculatequickstatistic(statistictype:limittoindexes:ignorevariabledeclaration:ignorereferencedlines:)","title":"func calculateQuickStatistic(statisticType: StatisticType, limitToIndexes: IndexSet?, ignoreVariableDeclaration: Bool, ignoreReferencedLines: Bool) -> CalculationResult?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/subtotalindexfor(lineindex:)","title":"func subtotalIndexFor(lineIndex: LineIndex) -> LineIndex?","type":"method"},{"title":"Convenience initializers for working with text views","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/init(multilinetext:customization:)","title":"init(multiLineText: MultiLineText, customization: EngineCustomization?)","type":"init"},{"path":"\/documentation\/soulvercore\/linecollection\/textviewreadylinecollectionwith(customization:)","title":"class func textViewReadyLineCollectionWith(customization: EngineCustomization) -> LineCollection","type":"method"},{"title":"Additional line properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/setbehaviour(behaviour:forlineat:)","title":"func setBehaviour(behaviour: Line.CalculationBehaviour, forLineAt: LineIndex)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/setalignment(alignment:forlineat:)","title":"func setAlignment(alignment: Line.ExpressionAlignment, forLineAt: LineIndex)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/setattribution(attribution:forlineat:)","title":"func setAttribution(attribution: String?, forLineAt: LineIndex)","type":"method"},{"title":"Variable related utilities","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/variablestateonline(_:)","title":"func variableStateOnLine(LineIndex) -> VariableList","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/finalvariablestate","title":"var finalVariableState: VariableList","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/indexesoflinesdependenton(variables:)","title":"func indexesOfLinesDependentOn(variables: [Variable]) -> IndexSet","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/formatteddefinitionof(inlinevariable:)","title":"func formattedDefinitionOf(inlineVariable: Variable) -> String?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/resultsasvariablewith(title:statistic:)","title":"func resultsAsVariableWith(title: String, statistic: StatisticType?) -> Variable","type":"method"},{"title":"Index-related utilities","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/firstindex","title":"var firstIndex: Int","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/lastindex","title":"var lastIndex: Int","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/isvalidindex(_:)","title":"func isValidIndex(LineIndex) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/arevalidindexes(_:)","title":"func areValidIndexes(IndexSet) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/allindexes","title":"var allIndexes: IndexSet","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/linesatindexes(indexes:)","title":"func linesAtIndexes(indexes: IndexSet) -> [Line]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/indexesoftimedependentlines","title":"var indexesOfTimeDependentLines: IndexSet","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/tokenfor(tokenindexpath:)","title":"func tokenFor(tokenIndexPath: TokenIndexPath) -> Token?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/indexpathfor(token:onlineat:)","title":"func indexPathFor(token: Token, onLineAt: LineIndex) -> TokenIndexPath?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/indexoffirstnonemptylineabove(index:)","title":"func indexOfFirstNonEmptyLineAbove(index: LineIndex) -> LineIndex?","type":"method"},{"title":"Remote evaluating lines","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/remotequeries","title":"var remoteQueries: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/cancelpendinganswer(forlineat:)","title":"func cancelPendingAnswer(forLineAt: LineIndex)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/indexesofpendinglines","title":"var indexesOfPendingLines: IndexSet","type":"property"},{"title":"Experimental parsing behaviors","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/unitdeclarations","title":"var unitDeclarations: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/tripplanning","title":"var tripPlanning: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/generatevariablesfromlabels","title":"var generateVariablesFromLabels: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/rawstringvariabledefinitions","title":"var rawStringVariableDefinitions: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/contextualdatespans","title":"var contextualDatespans: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/sethighlight(color:for:forlineat:)","title":"func setHighlight(color: Line.HighlightColor?, for: Line.HighlightPortion, forLineAt: LineIndex)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/settransformer(reference:forlineat:)","title":"func setTransformer(reference: LineReference?, forLineAt: LineIndex)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/subscript(_:)","title":"subscript(LineIndex) -> Line","type":"subscript"},{"path":"\/documentation\/soulvercore\/linecollection\/subscript(safe:)","title":"subscript(safe _: LineIndex) -> Line?","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/multilinetext","title":"LineCollection.MultiLineText","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/soulvercore\/linecollection\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/soulvercore\/linecollection\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollection\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/flatmap(_:)-7pq44","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/flatmap(_:)-9gvkp","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/makeiterator()","title":"func makeIterator() -> LineCollectionIterator","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/map(_:)","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/sorted(using:)-4y2rb","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/sorted(using:)-lmhh","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/soulvercore\/linecollection\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/soulvercore\/linecollection\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/linecollection","title":"LineCollection","type":"class"},{"title":"Results of calculation","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculationresult\/init(evaluationresult:stringvalue:parsedexpression:)","title":"init(evaluationResult: EvaluationResult, stringValue: String, parsedExpression: TokenList?)","type":"init"},{"title":"Key properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculationresult\/stringvalue","title":"let stringValue: String","type":"property"},{"path":"\/documentation\/soulvercore\/calculationresult\/evaluationresult","title":"let evaluationResult: EvaluationResult","type":"property"},{"path":"\/documentation\/soulvercore\/calculationresult\/parsedexpression","title":"let parsedExpression: TokenList?","type":"property"},{"title":"Convenience properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculationresult\/isemptyresult","title":"var isEmptyResult: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/calculationresult\/ispendingresult","title":"var isPendingResult: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/calculationresult\/isfailedresult","title":"var isFailedResult: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/calculationresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/calculationresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/calculationresult","title":"CalculationResult","type":"struct"},{"path":"\/documentation\/soulvercore\/emptyresult","title":"var EmptyResult: CalculationResult","type":"var"},{"children":[{"title":"Convenience getters for the underlying data type","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/decimalvalue","title":"var decimalValue: Decimal?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/booleanvalue","title":"var booleanValue: Bool?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/percentagevalue","title":"var percentageValue: Percentage?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/unitexpressionvalue","title":"var unitExpressionValue: UnitExpression?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/unitvalue","title":"var unitValue: SCUnit?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/unitrangevalue","title":"var unitRangeValue: UnitRange?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/ratevalue","title":"var rateValue: UnitRate?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/dmsvalue","title":"var dmsValue: DegreesMinutesSeconds?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/gpscoordinatesvalue","title":"var gpsCoordinatesValue: GPSCoordinates?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/substancevalue","title":"var substanceValue: Substance?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/datestampvalue","title":"var datestampValue: Datestamp?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/datespanvalue","title":"var datespanValue: Datespan?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/timespanvalue","title":"var timespanValue: Timespan?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/placevalue","title":"var placeValue: Place?","type":"property"},{"path":"\/documentation\/soulvercore\/evaluationresult\/variablevalue","title":"var variableValue: Variable?","type":"property"},{"title":"Cases with numbers in various forms","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/decimal(_:)","title":"case decimal(Decimal)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/fraction(_:)","title":"case fraction(Fraction)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/percentage(_:)","title":"case percentage(Percentage)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/multiplier(_:)","title":"case multiplier(Multiplier)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/binary(_:)","title":"case binary(UInt)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/hex(_:)","title":"case hex(UInt)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/octal(_:)","title":"case octal(UInt)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/scientificnotation(_:)","title":"case scientificNotation(Decimal)","type":"case"},{"title":"Cases for units & rates","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/unitexpression(_:)","title":"case unitExpression(UnitExpression)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/decimalrate(_:)","title":"case decimalRate(DecimalRate)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/unitrate(_:)","title":"case unitRate(UnitRate)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/percentagerate(_:)","title":"case percentageRate(PercentageRate)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/unitrange(_:)","title":"case unitRange(UnitRange)","type":"case"},{"title":"Cases that are date & time related","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/date(_:)","title":"case date(Datestamp)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/datespan(_:)","title":"case datespan(Datespan)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/iso8601(_:)","title":"case iso8601(iso8601)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/timestamp(_:)","title":"case timestamp(Timestamp)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/timespan(_:)","title":"case timespan(Timespan)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/laptime(_:)","title":"case laptime(Laptime)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/frametime(_:)","title":"case frametime(Frametime)","type":"case"},{"title":"Cases with misc types","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/resolution(_:)","title":"case resolution(Resolution)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/salestax(_:)","title":"case salesTax(SalesTax)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/pitch(_:)","title":"case pitch(Pitch)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/variable(_:)","title":"case variable(Variable)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/degreesminutesseconds(_:)","title":"case degreesMinutesSeconds(DegreesMinutesSeconds)","type":"case"},{"title":"Nil answer cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/none","title":"case none","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/pending","title":"case pending","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/error(_:)","title":"case error(EvaluationError)","type":"case"},{"title":"Inputs to word functions only (never present in a CalculationResult)","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/unit(_:)","title":"case unit(SCUnit)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/gpscoordinates(_:)","title":"case gpsCoordinates(GPSCoordinates)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/substance(_:)","title":"case substance(Substance)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/place(_:)","title":"case place(Place)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/customtype(_:)","title":"case customType(CustomType)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/statistictype(_:)","title":"case statisticType(StatisticType)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/list(_:)","title":"case list(List)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/rawstring(_:)","title":"case rawString(String)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/customunit(_:)","title":"case customUnit(CustomUnit)","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationresult\/dynamicplace(_:)","title":"case dynamicPlace(String)","type":"case"},{"title":"Equivalent types","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/equivalenttokentype","title":"var equivalentTokenType: TokenType","type":"property"},{"title":"Debug representation","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/stringvalue","title":"var stringValue: String?","type":"property"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/addingcontext(context:toresult:)","title":"case addingContext(context: String, toResult: EvaluationResult)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/errorvalue","title":"var errorValue: EvaluationError?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/evaluationresult\/==(_:_:)","title":"static func == (EvaluationResult, EvaluationResult) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/evaluationresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresult\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/evaluationresult\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/evaluationresult","title":"EvaluationResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationerror\/baddivision","title":"case BadDivision","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationerror\/dividebyzero","title":"case DivideByZero","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationerror\/imaginarynumber","title":"case ImaginaryNumber","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationerror\/impreciseresult","title":"case ImpreciseResult","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationerror\/infinity","title":"case Infinity","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationerror\/other","title":"case Other","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationerror\/silenterror","title":"case SilentError","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationerror\/unitmismatch","title":"case UnitMismatch","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationerror\/unsupportedexponentoperation","title":"case UnsupportedExponentOperation","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationerror\/unsupportedrate","title":"case UnsupportedRate","type":"case"},{"path":"\/documentation\/soulvercore\/evaluationerror\/unsupportedunitmultiplication","title":"case UnsupportedUnitMultiplication","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/evaluationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/soulvercore\/evaluationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/evaluationerror","title":"EvaluationError","type":"enum"},{"title":"Result formatting","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/init()","title":"init()","type":"init"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/currencyformattingdisabled","title":"var currencyFormattingDisabled: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/currencyformattingpreferences","title":"var currencyFormattingPreferences: CurrencyFormattingPreferences","type":"property"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/dp","title":"var dp: Int","type":"property"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/fractionizewherepossible","title":"var fractionizeWherePossible: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/notationpreferences","title":"var notationPreferences: NotationPreferences","type":"property"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/referencestakeformattedvalue","title":"var referencesTakeFormattedValue: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/resultconversionbehavior","title":"var resultConversionBehavior: ResultConversionBehavior","type":"property"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/thousandsseparatordisabled","title":"var thousandsSeparatorDisabled: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/maximumdp","title":"static let maximumDp: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/formattingpreferences\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/formattingpreferences\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/formattingpreferences","title":"FormattingPreferences","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/currencyformattingpreferences\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/currencyformattingpreferences\/roundresults","title":"var roundResults: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/currencyformattingpreferences\/showtrailingzeros","title":"var showTrailingZeros: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/currencyformattingpreferences\/usecurrencysymbols","title":"var useCurrencySymbols: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/currencyformattingpreferences\/disabled","title":"static let disabled: CurrencyFormattingPreferences","type":"property"},{"path":"\/documentation\/soulvercore\/currencyformattingpreferences\/standard","title":"static let standard: CurrencyFormattingPreferences","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/currencyformattingpreferences\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/currencyformattingpreferences\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/currencyformattingpreferences","title":"CurrencyFormattingPreferences","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/notationpreferences\/init(notationstyle:uppernotationthreshold:)","title":"init(notationStyle: NotationStyle, upperNotationThreshold: SIThreshold)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/notationpreferences\/notationstyle-swift.property","title":"var notationStyle: NotationStyle","type":"property"},{"path":"\/documentation\/soulvercore\/notationpreferences\/uppernotationthreshold","title":"var upperNotationThreshold: SIThreshold","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/notationpreferences\/off","title":"static var off: NotationPreferences","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/notationpreferences\/notationstyle-swift.enum\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/soulvercore\/notationpreferences\/notationstyle-swift.enum\/off","title":"case off","type":"case"},{"path":"\/documentation\/soulvercore\/notationpreferences\/notationstyle-swift.enum\/on","title":"case on","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/notationpreferences\/notationstyle-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/notationpreferences\/notationstyle-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/notationpreferences\/notationstyle-swift.enum","title":"NotationPreferences.NotationStyle","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/notationpreferences\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/notationpreferences\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/notationpreferences","title":"NotationPreferences","type":"struct"},{"children":[{"title":"Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/sithreshold\/thousand","title":"case thousand","type":"case"},{"path":"\/documentation\/soulvercore\/sithreshold\/hundredthousand","title":"case hundredThousand","type":"case"},{"path":"\/documentation\/soulvercore\/sithreshold\/million","title":"case million","type":"case"},{"path":"\/documentation\/soulvercore\/sithreshold\/billion","title":"case billion","type":"case"},{"path":"\/documentation\/soulvercore\/sithreshold\/trillion","title":"case trillion","type":"case"},{"path":"\/documentation\/soulvercore\/sithreshold\/quadrillion","title":"case quadrillion","type":"case"},{"path":"\/documentation\/soulvercore\/sithreshold\/quintillion","title":"case quintillion","type":"case"},{"path":"\/documentation\/soulvercore\/sithreshold\/sextillion","title":"case sextillion","type":"case"},{"path":"\/documentation\/soulvercore\/sithreshold\/septillion","title":"case septillion","type":"case"},{"path":"\/documentation\/soulvercore\/sithreshold\/pentillion","title":"case pentillion","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/sithreshold\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/sithreshold\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/sithreshold\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/sithreshold\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/sithreshold\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/sithreshold\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/sithreshold","title":"SIThreshold","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultconversionbehavior\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/soulvercore\/resultconversionbehavior\/customrules(_:)","title":"case customRules([ResultConversionRule])","type":"case"},{"path":"\/documentation\/soulvercore\/resultconversionbehavior\/none","title":"case none","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultconversionbehavior\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/resultconversionbehavior\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/resultconversionbehavior","title":"ResultConversionBehavior","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultconversionrule\/converttofeetandinchesunitexpressionwith(identifier:)","title":"case convertToFeetAndInchesUnitExpressionWith(identifier: UnitIdentifier)","type":"case"},{"path":"\/documentation\/soulvercore\/resultconversionrule\/converttotimespanunitexpressionwith(identifier:)","title":"case convertToTimespanUnitExpressionWith(identifier: UnitIdentifier)","type":"case"},{"path":"\/documentation\/soulvercore\/resultconversionrule\/timewithtimezone(converttotimezone:)","title":"case timeWithTimezone(convertToTimezone: TimeZone)","type":"case"},{"path":"\/documentation\/soulvercore\/resultconversionrule\/tokenof(type:converttotype:)","title":"case tokenOf(type: TokenType, convertToType: TokenType)","type":"case"},{"path":"\/documentation\/soulvercore\/resultconversionrule\/unitexpressionof(unittype:converttounit:)","title":"case unitExpressionOf(unitType: UnitType, convertToUnit: UnitIdentifier)","type":"case"},{"path":"\/documentation\/soulvercore\/resultconversionrule\/unitexpressionwith(identifier:converttounit:)","title":"case unitExpressionWith(identifier: UnitIdentifier, convertToUnit: UnitIdentifier)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultconversionrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/resultconversionrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/resultconversionrule","title":"ResultConversionRule","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/init(original:replacement:position:)","title":"init(original: String, replacement: String, position: UnitSymbolReplacementPosition)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/originalsymbol","title":"let originalSymbol: String","type":"property"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/position","title":"let position: UnitSymbolReplacementPosition","type":"property"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/replacementsymbol","title":"let replacementSymbol: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/standardcustomsymbolsfor(locale:)","title":"static func standardCustomSymbolsFor(locale: Locale) -> [UnitSymbolReplacement]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/after","title":"case after","type":"case"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/afterwithspace","title":"case afterWithSpace","type":"case"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/before","title":"case before","type":"case"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/beforewithspace","title":"case beforeWithSpace","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/unitsymbolreplacementposition","title":"UnitSymbolReplacement.UnitSymbolReplacementPosition","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/unitsymbolreplacement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/unitsymbolreplacement","title":"UnitSymbolReplacement","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresultformatter\/init(customization:formattingpreferences:)","title":"init(customization: EngineCustomization, formattingPreferences: FormattingPreferences?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/evaluationresultformatter\/format(result:)","title":"func format(result: EvaluationResult) -> CalculationResult","type":"method"}],"path":"\/documentation\/soulvercore\/evaluationresultformatter","title":"EvaluationResultFormatter","type":"class"},{"title":"Setting variables in calculation","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variable\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/soulvercore\/variable\/init(name:value:type:)","title":"init(name: VariableName, value: VariableValue?, type: VariableType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variable\/declaringlineindex","title":"var declaringLineIndex: LineIndex?","type":"property"},{"path":"\/documentation\/soulvercore\/variable\/definition","title":"var definition: EvaluationResult?","type":"property"},{"path":"\/documentation\/soulvercore\/variable\/isphrase","title":"var isPhrase: Bool?","type":"property"},{"path":"\/documentation\/soulvercore\/variable\/name","title":"let name: VariableName","type":"property"},{"path":"\/documentation\/soulvercore\/variable\/relatedlineindexes","title":"var relatedLineIndexes: IndexSet?","type":"property"},{"path":"\/documentation\/soulvercore\/variable\/representedresults","title":"var representedResults: [EvaluationResult]?","type":"property"},{"path":"\/documentation\/soulvercore\/variable\/type","title":"var type: VariableType","type":"property"},{"path":"\/documentation\/soulvercore\/variable\/value","title":"let value: VariableValue?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/global","title":"case global","type":"case"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/linereference","title":"case lineReference","type":"case"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/local","title":"case local","type":"case"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/parameter","title":"case parameter","type":"case"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/relativelinereference","title":"case relativeLineReference","type":"case"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/tag","title":"case tag","type":"case"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/variable\/variabletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/variable\/variabletype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/variable\/variabletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/variable\/variabletype","title":"Variable.VariableType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/variable\/==(_:_:)","title":"static func == (Variable, Variable) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/variable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/variable\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/variable","title":"Variable","type":"struct"},{"path":"\/documentation\/soulvercore\/variablename","title":"VariableName","type":"typealias"},{"path":"\/documentation\/soulvercore\/variablevalue","title":"VariableValue","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variablelist\/init(variables:)","title":"init(variables: [Variable])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variablelist\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/soulvercore\/variablelist\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/soulvercore\/variablelist\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/variablelist\/isnotempty","title":"var isNotEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variablelist\/allvariables()","title":"func allVariables() -> [Variable]","type":"method"},{"path":"\/documentation\/soulvercore\/variablelist\/clearvariable(withname:)","title":"func clearVariable(withName: String)","type":"method"},{"path":"\/documentation\/soulvercore\/variablelist\/multiwordvariables(reversesortbylength:)","title":"func multiWordVariables(reverseSortByLength: Bool) -> [Variable]","type":"method"},{"path":"\/documentation\/soulvercore\/variablelist\/providedefinitionsforvalueswith(definitionblock:)","title":"func provideDefinitionsForValuesWith(definitionBlock: (RawExpression) -> CalculationResult)","type":"method"},{"path":"\/documentation\/soulvercore\/variablelist\/setvariable(_:)","title":"func setVariable(Variable)","type":"method"},{"path":"\/documentation\/soulvercore\/variablelist\/setvariables(_:)","title":"func setVariables([Variable])","type":"method"},{"path":"\/documentation\/soulvercore\/variablelist\/singlewordvariables()","title":"func singleWordVariables() -> [Variable]","type":"method"},{"path":"\/documentation\/soulvercore\/variablelist\/variablesexludinglinereferences()","title":"func variablesExludingLineReferences() -> [Variable]","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variablelist\/subscript(_:)","title":"subscript(VariableName) -> Variable?","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variablelist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/variablelist\/==(_:_:)","title":"static func == (VariableList, VariableList) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/variablelist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/variablelist\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/variablelist\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/variablelist","title":"VariableList","type":"class"},{"title":"Customizing calculation behavior","type":"groupMarker"},{"children":[{"title":"Creation","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/init(locale:calendar:)","title":"init(locale: Locale, calendar: Calendar?)","type":"init"},{"path":"\/documentation\/soulvercore\/enginecustomization\/standard","title":"static var standard: EngineCustomization","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/standardwith(locale:)","title":"static func standardWith(locale: Locale) -> EngineCustomization","type":"method"},{"path":"\/documentation\/soulvercore\/enginecustomization\/soulver","title":"static var soulver: EngineCustomization","type":"property"},{"title":"Customizing parsing and evaluation behavior","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/featureflags","title":"var featureFlags: EngineFeatureFlags","type":"property"},{"title":"Custom time zones","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/customplaces","title":"var customPlaces: [Place]","type":"property"},{"title":"Custom functions","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/customfunctions","title":"var customFunctions: [CustomFunction]","type":"property"},{"title":"Customizing units","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/customunits","title":"var customUnits: [CustomUnit]","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/unitsystem","title":"var unitSystem: UnitMeasurementSystem","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/currencysymbolsettings-swift.property","title":"var currencySymbolSettings: CurrencySymbolSettings","type":"property"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/currencysymbolsettings-swift.enum\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/soulvercore\/enginecustomization\/currencysymbolsettings-swift.enum\/manualwith(symbols:)","title":"case manualWith(symbols: [UnitSymbolReplacement])","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/currencysymbolsettings-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/enginecustomization\/currencysymbolsettings-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/enginecustomization\/currencysymbolsettings-swift.enum","title":"EngineCustomization.CurrencySymbolSettings","type":"enum"},{"path":"\/documentation\/soulvercore\/enginecustomization\/basefontsize","title":"var baseFontSize: Decimal","type":"property"},{"title":"Providing live data","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/currencyrateprovider","title":"var currencyRateProvider: CurrencyRateProvider?","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/weatherdataprovider","title":"var weatherDataProvider: WeatherDataProvider?","type":"property"},{"title":"Locale related","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/locale","title":"var locale: Locale","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/calendar","title":"var calendar: Calendar","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/timezone","title":"var timeZone: TimeZone","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/convertto(locale:)","title":"func convertTo(locale: Locale) -> EngineCustomization","type":"method"},{"path":"\/documentation\/soulvercore\/enginecustomization\/holidays","title":"var holidays: [Holiday]","type":"property"},{"title":"Utilities","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/symbolfor(unitidentifier:)","title":"func symbolFor(unitIdentifier: UnitIdentifier) -> String?","type":"method"},{"path":"\/documentation\/soulvercore\/enginecustomization\/longformnamefor(unitidentifier:)","title":"func longFormNameFor(unitIdentifier: UnitIdentifier) -> String?","type":"method"},{"path":"\/documentation\/soulvercore\/enginecustomization\/isoperator(text:)","title":"func isOperator(text: String) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/enginecustomization\/isclassicfunction(text:)","title":"func isClassicFunction(text: String) -> Bool","type":"method"},{"title":"Hashable","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/init(resourcesbundle:locale:calendar:)","title":"init(resourcesBundle: ResourceBundle, locale: Locale, calendar: Calendar?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/airports","title":"var airports: [Airport]","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/cities","title":"var cities: [City]","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/countries","title":"var countries: [Country]","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/customsymbols","title":"var customSymbols: [UnitSymbolReplacement]","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/placedataprovider","title":"var placeDataProvider: PlaceDataProvider?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/cryptocurrencies","title":"static var cryptoCurrencies: Set<UnitIdentifier>","type":"property"},{"path":"\/documentation\/soulvercore\/enginecustomization\/realworldcurrencies","title":"static var realWorldCurrencies: Set<UnitIdentifier>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/soulvercore\/enginecustomization\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/enginecustomization\/==(_:_:)","title":"static func == (EngineCustomization, EngineCustomization) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/enginecustomization\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginecustomization\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/enginecustomization\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/enginecustomization","title":"EngineCustomization","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customunit\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/soulvercore\/customunit\/init(name:definition:equivalentunit:)","title":"init(name: String, definition: Decimal, equivalentUnit: UnitIdentifier)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customunit\/definition","title":"let definition: Decimal","type":"property"},{"path":"\/documentation\/soulvercore\/customunit\/equivalentunit","title":"let equivalentUnit: UnitIdentifier","type":"property"},{"path":"\/documentation\/soulvercore\/customunit\/legacydefinition","title":"let legacyDefinition: String?","type":"property"},{"path":"\/documentation\/soulvercore\/customunit\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/customunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/customunit","title":"CustomUnit","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitmeasurementsystem\/customaryus","title":"case customaryUS","type":"case"},{"path":"\/documentation\/soulvercore\/unitmeasurementsystem\/imperial","title":"case imperial","type":"case"},{"path":"\/documentation\/soulvercore\/unitmeasurementsystem\/metric","title":"case metric","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitmeasurementsystem\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitmeasurementsystem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/unitmeasurementsystem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitmeasurementsystem\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitmeasurementsystem\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/unitmeasurementsystem\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/unitmeasurementsystem","title":"UnitMeasurementSystem","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/holiday\/init(day:month:year:)","title":"init(day: Int, month: Int, year: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/holiday\/day","title":"let day: Int","type":"property"},{"path":"\/documentation\/soulvercore\/holiday\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/soulvercore\/holiday\/month","title":"let month: Int","type":"property"},{"path":"\/documentation\/soulvercore\/holiday\/year","title":"let year: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/holiday\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/soulvercore\/holiday\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/holiday\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/holiday\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/holiday","title":"Holiday","type":"struct"},{"children":[{"title":"Creation","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/init()","title":"init()","type":"init"},{"title":"Basic calculation features","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/units","title":"var units: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/calendarcalculations","title":"var calendarCalculations: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/wordfunctions","title":"var wordFunctions: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/disabledfunctions","title":"var disabledFunctions: Set<FunctionIdentifier>?","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/variabledeclarations","title":"var variableDeclarations: Bool","type":"property"},{"title":"Calculation behavior","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/misplacedthousandsseparatorbehavior","title":"var misplacedThousandsSeparatorBehavior: MisplacedThousandsSeparatorBehavior","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/functionsrequireparentheses","title":"var functionsRequireParentheses: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/inambiguityprefersomethingtonothing","title":"var inAmbiguityPreferSomethingToNothing: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/timezonecodeautocorrectionbehavior","title":"var timezoneCodeAutocorrectionBehavior: TimezoneCodeCorrectionBehavior","type":"property"},{"title":"Date-seeking options (typically for scheduling or trip planning features)","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/seeksfuturedate","title":"var seeksFutureDate: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/dateparsingoptions","title":"var dateParsingOptions: DateParsingOptions","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/preserveallparsedtokentypes","title":"var preserveAllParsedTokenTypes: Bool","type":"property"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/allowmisplacedthousandsseparators","title":"var allowMisplacedThousandsSeparators: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/bracketcomments","title":"var bracketComments: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/dynamicplacequeries","title":"var dynamicPlaceQueries: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/hashtags","title":"var hashTags: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/historicalcurrencyqueries","title":"var historicalCurrencyQueries: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/historicalweatherqueries","title":"var historicalWeatherQueries: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/labelcomments","title":"var labelComments: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/preferactivetimezoneabbreviations","title":"var preferActiveTimeZoneAbbreviations: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/quotationmarkcomments","title":"var quotationMarkComments: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/slashcomments","title":"var slashComments: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/enginefeatureflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/enginefeatureflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/enginefeatureflags","title":"EngineFeatureFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/dateparsingoptions\/init(defaulttimeforsingledate:defaulttimefordaterange:)","title":"init(defaultTimeForSingleDate: DefaultTimeForDate, defaultTimeForDateRange: DefaultTimeForDate)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/dateparsingoptions\/defaulttimefordaterange","title":"var defaultTimeForDateRange: DefaultTimeForDate","type":"property"},{"path":"\/documentation\/soulvercore\/dateparsingoptions\/defaulttimeforsingledate","title":"var defaultTimeForSingleDate: DefaultTimeForDate","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/dateparsingoptions\/defaulttimefordate\/noon","title":"case noon","type":"case"},{"path":"\/documentation\/soulvercore\/dateparsingoptions\/defaulttimefordate\/startofday","title":"case startOfDay","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/dateparsingoptions\/defaulttimefordate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/dateparsingoptions\/defaulttimefordate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/dateparsingoptions\/defaulttimefordate","title":"DateParsingOptions.DefaultTimeForDate","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/dateparsingoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/dateparsingoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/dateparsingoptions","title":"DateParsingOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/misplacedthousandsseparatorbehavior\/allow","title":"case allow","type":"case"},{"path":"\/documentation\/soulvercore\/misplacedthousandsseparatorbehavior\/disallow","title":"case disallow","type":"case"},{"path":"\/documentation\/soulvercore\/misplacedthousandsseparatorbehavior\/interpretasdecimalpoint","title":"case interpretAsDecimalPoint","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/misplacedthousandsseparatorbehavior\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/misplacedthousandsseparatorbehavior\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/misplacedthousandsseparatorbehavior","title":"MisplacedThousandsSeparatorBehavior","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timezonecodecorrectionbehavior\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/soulvercore\/timezonecodecorrectionbehavior\/never","title":"case never","type":"case"},{"path":"\/documentation\/soulvercore\/timezonecodecorrectionbehavior\/onlynonsummercodes","title":"case onlyNonSummerCodes","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timezonecodecorrectionbehavior\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/timezonecodecorrectionbehavior\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/timezonecodecorrectionbehavior","title":"TimezoneCodeCorrectionBehavior","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundleversion\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundleversion\/build","title":"let build: String","type":"property"},{"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundleversion\/version","title":"let version: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundleversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundleversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundleversion","title":"ResourceBundle.ResourcesBundleVersion","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resourcebundle\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundlelocation\/externalbundle(_:)","title":"case externalBundle(URL)","type":"case"},{"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundlelocation\/mainbundle","title":"case mainBundle","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundlelocation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundlelocation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/resourcebundle\/resourcesbundlelocation","title":"ResourceBundle.ResourcesBundleLocation","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resourcebundle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/resourcebundle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/resourcebundle","title":"ResourceBundle","type":"struct"},{"title":"Providing live currency rates","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/soulvercore\/currencyrateprovider\/fetchrateinbackgroundfor(request:)-3yu0z","title":"func fetchRateInBackgroundFor(request: CurrencyRateRequest) async -> Decimal?","type":"method"}],"title":"CurrencyRateProvider Implementations","type":"groupMarker"}],"path":"\/documentation\/soulvercore\/currencyrateprovider\/fetchrateinbackgroundfor(request:)-6lf19","title":"func fetchRateInBackgroundFor(request: CurrencyRateRequest) async -> Decimal?","type":"method"},{"path":"\/documentation\/soulvercore\/currencyrateprovider\/ratefor(request:)","title":"func rateFor(request: CurrencyRateRequest) -> Decimal?","type":"method"}],"path":"\/documentation\/soulvercore\/currencyrateprovider","title":"CurrencyRateProvider","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/currencyraterequest\/basecurrencycode","title":"var baseCurrencyCode: CurrencyCode","type":"property"},{"path":"\/documentation\/soulvercore\/currencyraterequest\/basecurrencyquantity","title":"var baseCurrencyQuantity: Double","type":"property"},{"path":"\/documentation\/soulvercore\/currencyraterequest\/currencycode","title":"var currencyCode: CurrencyCode","type":"property"},{"path":"\/documentation\/soulvercore\/currencyraterequest\/date","title":"let date: Date?","type":"property"},{"path":"\/documentation\/soulvercore\/currencyraterequest\/fromcurrency","title":"let fromCurrency: CurrencyCode","type":"property"},{"path":"\/documentation\/soulvercore\/currencyraterequest\/fromcurrencyunit","title":"let fromCurrencyUnit: UnitIdentifier","type":"property"},{"path":"\/documentation\/soulvercore\/currencyraterequest\/quantity","title":"let quantity: Decimal","type":"property"},{"path":"\/documentation\/soulvercore\/currencyraterequest\/tocurrency","title":"let toCurrency: CurrencyCode","type":"property"},{"path":"\/documentation\/soulvercore\/currencyraterequest\/tocurrencyunit","title":"let toCurrencyUnit: UnitIdentifier","type":"property"},{"path":"\/documentation\/soulvercore\/currencyraterequest\/unitidentifier","title":"var unitIdentifier: UnitIdentifier","type":"property"}],"path":"\/documentation\/soulvercore\/currencyraterequest","title":"CurrencyRateRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/ecbcurrencyrateprovider\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/ecbcurrencyrateprovider\/ratefor(request:)","title":"func rateFor(request: CurrencyRateRequest) -> Decimal?","type":"method"},{"path":"\/documentation\/soulvercore\/ecbcurrencyrateprovider\/updaterates()","title":"func updateRates() async -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/ecbcurrencyrateprovider\/fetchrateinbackgroundfor(request:)","title":"func fetchRateInBackgroundFor(request: CurrencyRateRequest) async -> Decimal?","type":"method"}],"path":"\/documentation\/soulvercore\/ecbcurrencyrateprovider\/currencyrateprovider-implementations","title":"CurrencyRateProvider Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/ecbcurrencyrateprovider","title":"ECBCurrencyRateProvider","type":"class"},{"title":"Providing live weather data","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/weatherdataprovider\/datafor(request:)","title":"func dataFor(request: WeatherDataRequest) async throws -> EvaluationResult?","type":"method"}],"path":"\/documentation\/soulvercore\/weatherdataprovider","title":"WeatherDataProvider","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/weatherdatarequest\/date","title":"var date: Date?","type":"property"},{"path":"\/documentation\/soulvercore\/weatherdatarequest\/datestamp","title":"let datestamp: Datestamp?","type":"property"},{"path":"\/documentation\/soulvercore\/weatherdatarequest\/function","title":"let function: FunctionIdentifier","type":"property"},{"path":"\/documentation\/soulvercore\/weatherdatarequest\/location","title":"let location: Place","type":"property"}],"path":"\/documentation\/soulvercore\/weatherdatarequest","title":"WeatherDataRequest","type":"struct"},{"title":"Providing live place data","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/soulvercore\/placedataprovider\/distancebetween(location1:location2:)-7xypt","title":"func distanceBetween(location1: PlaceData.Coordinates, location2: PlaceData.Coordinates) -> UnitExpression?","type":"method"}],"title":"PlaceDataProvider Implementations","type":"groupMarker"}],"path":"\/documentation\/soulvercore\/placedataprovider\/distancebetween(location1:location2:)-4raeg","title":"func distanceBetween(location1: PlaceData.Coordinates, location2: PlaceData.Coordinates) -> UnitExpression?","type":"method"},{"path":"\/documentation\/soulvercore\/placedataprovider\/placedatafor(request:)","title":"func placeDataFor(request: String) async throws -> PlaceData?","type":"method"}],"path":"\/documentation\/soulvercore\/placedataprovider","title":"PlaceDataProvider","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/placedata\/coordinates-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/soulvercore\/placedata\/coordinates-swift.struct\/init(latitude:longitude:)","title":"init(latitude: Double, longitude: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/placedata\/coordinates-swift.struct\/latitude","title":"let latitude: Double","type":"property"},{"path":"\/documentation\/soulvercore\/placedata\/coordinates-swift.struct\/longitude","title":"let longitude: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/placedata\/coordinates-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/placedata\/coordinates-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/placedata\/coordinates-swift.struct","title":"PlaceData.Coordinates","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/placedata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/soulvercore\/placedata\/init(name:timezone:coordinates:)","title":"init(name: String, timeZone: TimeZone, coordinates: PlaceData.Coordinates?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/placedata\/coordinates-swift.property","title":"let coordinates: PlaceData.Coordinates?","type":"property"},{"path":"\/documentation\/soulvercore\/placedata\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/soulvercore\/placedata\/timezone","title":"let timeZone: TimeZone","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/placedata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/placedata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/placedata","title":"PlaceData","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customplace\/gpscoordinates","title":"let gpsCoordinates: GPSCoordinates?","type":"property"},{"path":"\/documentation\/soulvercore\/customplace\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/soulvercore\/customplace\/timezone","title":"let timeZone: TimeZone","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customplace\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/customplace\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/customplace","title":"CustomPlace","type":"struct"},{"title":"Detailed information about how an expression was interpreted","type":"groupMarker"},{"children":[{"title":"Basic Token Types","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/number","title":"case number","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/operator","title":"case `operator`","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/bracket","title":"case bracket","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/subexpression","title":"case subexpression","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/whitespace","title":"case whitespace","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/binarynumber","title":"case binaryNumber","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/octalnumber","title":"case octalNumber","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/hexadecimalnumber","title":"case hexadecimalNumber","type":"case"},{"title":"Fractions & Percentages","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/fraction","title":"case fraction","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/percentage","title":"case percentage","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/multiplier","title":"case multiplier","type":"case"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/variable","title":"case variable","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/variableassignmentoperator","title":"case variableAssignmentOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/variabledeclaration","title":"case variableDeclaration","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/conditionalvariabledeclaration","title":"case conditionalVariableDeclaration","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/declaredvariable","title":"case declaredVariable","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/subsheet","title":"case subsheet","type":"case"},{"title":"Symbols","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/percentagesymbol","title":"case percentageSymbol","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/equals","title":"case equals","type":"case"},{"title":"Units & Rates","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/unit","title":"case unit","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/unitexpression","title":"case unitExpression","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/compoundunitexpression","title":"case compoundUnitExpression","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/unitrange","title":"case unitRange","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/substance","title":"case substance","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/degreesminutesseconds","title":"case degreesMinutesSeconds","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/rate","title":"case rate","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/unitdeclaration","title":"case unitDeclaration","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/declaredunit","title":"case declaredUnit","type":"case"},{"title":"Punctuation","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/questionmark","title":"case questionMark","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/colon","title":"case colon","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/semicolon","title":"case semicolon","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/dot","title":"case dot","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/quotationmark","title":"case quotationMark","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/comma","title":"case comma","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/hash","title":"case hash","type":"case"},{"title":"Dates and time","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/datestamp","title":"case datestamp","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/timespan","title":"case timespan","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/laptime","title":"case laptime","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/frametime","title":"case frametime","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/datespan","title":"case datespan","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/dateword","title":"case dateWord","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/specialday","title":"case specialDay","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/timezone","title":"case timezone","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/unixtimestamp","title":"case unixTimestamp","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/datequalifier","title":"case dateQualifier","type":"case"},{"title":"Other parts of speech","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/conjunctionword","title":"case conjunctionWord","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/prepositionword","title":"case prepositionWord","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/grammerarticleword","title":"case grammerArticleWord","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/ordinalsuffix","title":"case ordinalSuffix","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/numberword","title":"case numberWord","type":"case"},{"title":"Conditionals","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/conditionalexpression","title":"case conditionalExpression","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/conditionalkeyword","title":"case conditionalKeyword","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/boolean","title":"case boolean","type":"case"},{"title":"Places","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/relativeplaceword","title":"case relativePlaceWord","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/gpscoordinates","title":"case gpsCoordinates","type":"case"},{"title":"Statistics","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/list","title":"case list","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/statistictype","title":"case statisticType","type":"case"},{"title":"Converters","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/converter","title":"case converter","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/convertersymbol","title":"case converterSymbol","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/dpspecifier","title":"case dpSpecifier","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/typename","title":"case typeName","type":"case"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/functionname","title":"case functionName","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/javascriptfunctionname","title":"case javascriptFunctionName","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/functionexpression","title":"case functionExpression","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/wordfunction","title":"case wordFunction","type":"case"},{"title":"Other","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/resolution","title":"case resolution","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/pitch","title":"case pitch","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/salestax","title":"case salesTax","type":"case"},{"title":"Comment Types","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/label","title":"case label","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/wordcomment","title":"case wordComment","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/hashtag","title":"case hashtag","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/bracketcomment","title":"case bracketComment","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/slashcomment","title":"case slashComment","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/legacyquotationcomment","title":"case legacyQuotationComment","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/labelexpression","title":"case labelExpression","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/url","title":"case url","type":"case"},{"title":"Web Query Related Types","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/error","title":"case error","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/pending","title":"case pending","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/remotequery","title":"case remoteQuery","type":"case"},{"title":"Internal token types (used during parsing, but never present in a final `TokenList`)","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/unidentified","title":"case unidentified","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/customtype","title":"case customType","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/customunit","title":"case customUnit","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/custominternal","title":"case customInternal","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/datecomponents","title":"case dateComponents","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/literal","title":"case literal","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/anyword","title":"case anyWord","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/dynamicplace","title":"case dynamicPlace","type":"case"},{"path":"\/documentation\/soulvercore\/tokentype\/scalar","title":"case scalar","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/tokentype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/tokentype","title":"TokenType","type":"enum"},{"children":[{"title":"Numbers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/positivenumber","title":"case positiveNumber","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/negativenumber","title":"case negativeNumber","type":"case"},{"title":"Constants","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/pi","title":"case pi","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/tau","title":"case tau","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/phi","title":"case phi","type":"case"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/additionoperator","title":"case additionOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/subtractionoperator","title":"case subtractionOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/multiplicationoperator","title":"case multiplicationOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/divisionoperator","title":"case divisionOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/reversedivisionoperator","title":"case reverseDivisionOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/reversesubtractionoperator","title":"case reverseSubtractionOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/poweroperator","title":"case powerOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/modoperator","title":"case modOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/lesserof","title":"case lesserOf","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/greaterof","title":"case greaterOf","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/greaterthan","title":"case greaterThan","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/greaterthanorequalto","title":"case greaterThanOrEqualTo","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/lessthan","title":"case lessThan","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/lessthanorequalto","title":"case lessThanOrEqualTo","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/equalto","title":"case equalTo","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/notequalto","title":"case notEqualTo","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/logicalandoperator","title":"case logicalAndOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/logicaloroperator","title":"case logicalOrOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/logicalnotoperator","title":"case logicalNotOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/bitwiseandoperator","title":"case bitwiseAndOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/bitwiseoroperator","title":"case bitwiseOrOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/bitwisexoroperator","title":"case bitwiseXorOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/bitwisenotoperator","title":"case bitwiseNotOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/bitwiseleftshiftoperator","title":"case bitwiseLeftShiftOperator","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/bitwiserightshiftoperator","title":"case bitwiseRightShiftOperator","type":"case"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/squarerootsymbol","title":"case squareRootSymbol","type":"case"},{"title":"Booleans","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/false","title":"case `false`","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/true","title":"case `true`","type":"case"},{"title":"Brackets","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/openbracket","title":"case openBracket","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/closebracket","title":"case closeBracket","type":"case"},{"title":"Converter Symbols","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/convertersymbolto","title":"case converterSymbolTo","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/convertersymbolas","title":"case converterSymbolAs","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/convertersymbolin","title":"case converterSymbolIn","type":"case"},{"title":"Converters","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/numberconverter","title":"case numberConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/fractionconverter","title":"case fractionConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/multiplierconveter","title":"case multiplierConveter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/binaryconverter","title":"case binaryConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/hexadecimalconverter","title":"case hexadecimalConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/octalconverter","title":"case octalConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/percentageconverter","title":"case percentageConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/percentageapplier","title":"case percentageApplier","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/unitconverter","title":"case unitConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/unitconverterwithexplicitrate","title":"case unitConverterWithExplicitRate","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/unitexpressionconverter","title":"case unitExpressionConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/rateconverter","title":"case rateConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/dateconverter","title":"case dateConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/iso8601converter","title":"case iso8601Converter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/scientificnotationconverter","title":"case scientificNotationConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/feetandinchesconverter","title":"case feetAndInchesConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/poundsandouncesconverter","title":"case poundsAndOuncesConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/timestampconverter","title":"case timestampConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/timespanconverter","title":"case timespanConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/dateformattemplateconverter","title":"case dateFormatTemplateConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/laptimeconverter","title":"case laptimeConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/frametimeconverter","title":"case frametimeConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/pitchconverter","title":"case pitchConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/midiconverter","title":"case midiConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/dmsconverter","title":"case dmsConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/frequencyrateconverter","title":"case frequencyRateConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/timezoneconverter","title":"case timezoneConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/roundingtodpconverter","title":"case roundingToDpConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/roundingupconverter","title":"case roundingUpConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/roundingconverter","title":"case roundingConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/roundingdownconverter","title":"case roundingDownConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/minutesandsecondsconverter","title":"case minutesAndSecondsConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/hoursandminutesconverter","title":"case hoursAndMinutesConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/daysandhoursconverter","title":"case daysAndHoursConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/weeksanddaysconverter","title":"case weeksAndDaysConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/monthsanddaysconverter","title":"case monthsAndDaysConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/monthsandweeksconverter","title":"case monthsAndWeeksConverter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/yearsandmonthsconverter","title":"case yearsAndMonthsConverter","type":"case"},{"title":"Rates","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/decimalrate","title":"case decimalRate","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/unitrate","title":"case unitRate","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/percentagerate","title":"case percentageRate","type":"case"},{"title":"Date words","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordtoday","title":"case dateWordToday","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordnow","title":"case dateWordNow","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordtomorrow","title":"case dateWordTomorrow","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordyesterday","title":"case dateWordYesterday","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/dateworddayofweek","title":"case dateWordDayOfWeek","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordmonthofyear","title":"case dateWordMonthOfYear","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordquarterofyear","title":"case dateWordQuarterOfYear","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordam","title":"case dateWordAm","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordpm","title":"case dateWordPm","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordmidday","title":"case dateWordMidday","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordmidnight","title":"case dateWordMidnight","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordsummer","title":"case dateWordSummer","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordautumn","title":"case dateWordAutumn","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordwinter","title":"case dateWordWinter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datewordspring","title":"case dateWordSpring","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datequalifiernext","title":"case dateQualifierNext","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datequalifierthis","title":"case dateQualifierThis","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datequalifierprevious","title":"case dateQualifierPrevious","type":"case"},{"title":"Place words","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/relativeplacewordhere","title":"case relativePlaceWordHere","type":"case"},{"title":"Statistic words","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/statisticwordtotal","title":"case statisticWordTotal","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/statisticwordaverage","title":"case statisticWordAverage","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/statisticwordcount","title":"case statisticWordCount","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/statisticwordmedian","title":"case statisticWordMedian","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/statisticwordgcd","title":"case statisticWordGCD","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/statisticwordgreater","title":"case statisticWordGreater","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/statisticwordlcm","title":"case statisticWordLCM","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/statisticwordlesser","title":"case statisticWordLesser","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/statisticwordstandarddeviation","title":"case statisticWordStandardDeviation","type":"case"},{"title":"Preposition words","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordof","title":"case prepositionWordOf","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordwith","title":"case prepositionWordWith","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordbetween","title":"case prepositionWordBetween","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordat","title":"case prepositionWordAt","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordfor","title":"case prepositionWordFor","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordfrom","title":"case prepositionWordFrom","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordsince","title":"case prepositionWordSince","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionworduntil","title":"case prepositionWordUntil","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordafter","title":"case prepositionWordAfter","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordbefore","title":"case prepositionWordBefore","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordearlier","title":"case prepositionWordEarlier","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/prepositionwordlater","title":"case prepositionWordLater","type":"case"},{"title":"Article words","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/definitegrammararticleword","title":"case definiteGrammarArticleWord","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/indefinitegrammararticleword","title":"case indefiniteGrammarArticleWord","type":"case"},{"title":"Conjunction words","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/conjunctionwordand","title":"case conjunctionWordAnd","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/conjunctionwordor","title":"case conjunctionWordOr","type":"case"},{"title":"Type names","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/numbertypename","title":"case numberTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/fractiontypename","title":"case fractionTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/multipliertypename","title":"case multiplierTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/binarytypename","title":"case binaryTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/hexadecimaltypename","title":"case hexadecimalTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/octaltypename","title":"case octalTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/percentagetypename","title":"case percentageTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/ratetypename","title":"case rateTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/timestamptypename","title":"case timestampTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/timespantypename","title":"case timespanTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/feetandinchestypename","title":"case feetAndInchesTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/laptimetypename","title":"case laptimeTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/frametimetypename","title":"case frametimeTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/datetypename","title":"case dateTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/iso8601typename","title":"case iso8601TypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/decimalplacestypename","title":"case decimalPlacesTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/miditypename","title":"case midiTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/pitchtypename","title":"case pitchTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/dmstypename","title":"case dmsTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/frequencyratetypename","title":"case frequencyRateTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/scientificnotationtypename","title":"case scientificNotationTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/minutesandsecondstypename","title":"case minutesAndSecondsTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/daysandhourstypename","title":"case daysAndHoursTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/hoursandminutestypename","title":"case hoursAndMinutesTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/monthsandweekstypename","title":"case monthsAndWeeksTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/monthsanddaystypename","title":"case monthsAndDaysTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/weeksanddaystypename","title":"case weeksAndDaysTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/yearsandmonthstypename","title":"case yearsAndMonthsTypeName","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/poundsandouncestypename","title":"case poundsAndOuncesTypeName","type":"case"},{"title":"Word Functions","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/builtinwordfunction","title":"case builtInWordFunction","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/customwordfunction","title":"case customWordFunction","type":"case"},{"title":"Conditional Keywords","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/conditionalkeywordif","title":"case conditionalKeywordIf","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/conditionalkeywordthen","title":"case conditionalKeywordThen","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/conditionalkeywordelse","title":"case conditionalKeywordElse","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/conditionalkeywordunless","title":"case conditionalKeywordUnless","type":"case"},{"title":"Errors","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/unitmismatcherror","title":"case unitMismatchError","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/infinityerror","title":"case infinityError","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/dividebyzeroerror","title":"case divideByZeroError","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/imaginarynumbererror","title":"case imaginaryNumberError","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/impreciseresulterror","title":"case impreciseResultError","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/unsupportedunitmultiplicationerror","title":"case unsupportedUnitMultiplicationError","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/unsupportedrateerror","title":"case unsupportedRateError","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/baddivisionerror","title":"case badDivisionError","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/silenterror","title":"case silentError","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/unknownerror","title":"case unknownError","type":"case"},{"title":"Everything else","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/notspecified","title":"case notSpecified","type":"case"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/additivevariableassignment","title":"case additiveVariableAssignment","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/billionscalar","title":"case billionScalar","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/divizivevariableassignment","title":"case diviziveVariableAssignment","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/millionscalar","title":"case millionScalar","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/multiplicativevariableassignment","title":"case multiplicativeVariableAssignment","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/regularvariableassignment","title":"case regularVariableAssignment","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/subtractivevariableassignment","title":"case subtractiveVariableAssignment","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/thousandscalar","title":"case thousandScalar","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/trillionscalar","title":"case trillionScalar","type":"case"},{"path":"\/documentation\/soulvercore\/tokensubtype\/unsupportedexponentoperationerror","title":"case unsupportedExponentOperationError","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokensubtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/tokensubtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/tokensubtype","title":"TokenSubType","type":"enum"},{"children":[{"title":"Base properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/stringvalue","title":"var stringValue: String","type":"property"},{"path":"\/documentation\/soulvercore\/token\/range-swift.property","title":"var range: Token.Range","type":"property"},{"path":"\/documentation\/soulvercore\/token\/type","title":"let type: TokenType","type":"property"},{"path":"\/documentation\/soulvercore\/token\/subtype","title":"let subType: TokenSubType","type":"property"},{"path":"\/documentation\/soulvercore\/token\/subtokens","title":"var subtokens: TokenList?","type":"property"},{"title":"Numbers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/number","title":"var number: Decimal?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/decimalvalue","title":"var decimalValue: Decimal","type":"property"},{"path":"\/documentation\/soulvercore\/token\/binaryvalue","title":"var binaryValue: UInt?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/hexvalue","title":"var hexValue: UInt?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/octalvalue","title":"var octalValue: UInt?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/booleanvalue","title":"var booleanValue: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/token\/fractionvalue","title":"var fractionValue: Fraction?","type":"property"},{"title":"Unit related","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/unitexpressionvalue","title":"var unitExpressionValue: UnitExpression?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/unitvalue","title":"var unitValue: SCUnit?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/unitratevalue","title":"var unitRateValue: UnitRate?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/decimalratevalue","title":"var decimalRateValue: DecimalRate?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/dmsvalue","title":"var dmsValue: DegreesMinutesSeconds?","type":"property"},{"title":"Percentage related","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/percentagevalue","title":"var percentageValue: Percentage","type":"property"},{"path":"\/documentation\/soulvercore\/token\/percentageratevalue","title":"var percentageRateValue: PercentageRate?","type":"property"},{"title":"Date related","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/datestampvalue","title":"var datestampValue: Datestamp?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/calendarcomponentvalue","title":"var calendarComponentValue: Calendar.Component?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/datecomponentsvalue","title":"var dateComponentsValue: DateComponents?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/timezonevalue","title":"var timeZoneValue: TimeZone?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/datespanvalue","title":"var datespanValue: Datespan?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/dateintervalvalue","title":"var dateIntervalValue: DateInterval?","type":"property"},{"title":"Spans of time","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/timespanvalue","title":"var timespanValue: Timespan?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/laptimevalue","title":"var laptimeValue: Laptime?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/frametimevalue","title":"var frametimeValue: Frametime?","type":"property"},{"title":"Misc","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/resolutionvalue","title":"var resolutionValue: Resolution?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/salestaxvalue","title":"var salesTaxValue: SalesTax?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/placevalue","title":"var placeValue: Place?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/pitchvalue","title":"var pitchValue: Pitch?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/gpscoordinatesvalue","title":"var gpsCoordinatesValue: GPSCoordinates?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/statistictype","title":"var statisticType: StatisticType?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/functionidentifier","title":"var functionIdentifier: FunctionIdentifier?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/urlvalue","title":"var urlValue: URL?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/functionname","title":"var functionName: String?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/errorvalue","title":"var errorValue: EvaluationError?","type":"property"},{"title":"Variable-related","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/islinereference","title":"var isLineReference: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/token\/isvariable","title":"var isVariable: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/token\/variable","title":"var variable: Variable?","type":"property"},{"path":"\/documentation\/soulvercore\/token\/subsheetvalue","title":"var subsheetValue: Subsheet?","type":"property"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/==(_:_:)-1kst6","title":"static func == (NSRange, Range) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/==(_:_:)-6xw7m","title":"static func == (Range, NSRange) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/location","title":"let location: Int","type":"property"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/lowerbound","title":"var lowerBound: Int","type":"property"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/nsrange","title":"var nsRange: NSRange","type":"property"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/upperbound","title":"var upperBound: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/contains(_:)-8kp6w","title":"func contains(Range) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/contains(_:)-9x1t6","title":"func contains(Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/zero","title":"static let zero: Token.Range","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/token\/range-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/token\/range-swift.struct","title":"Token.Range","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/scalarsymbol","title":"var scalarSymbol: ScalarSymbol?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/'...(_:)-2q3m3","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/token\/'...(_:)-302f6","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/token\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/token\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/token\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/token\/_(_:_:)-7lfg7","title":"static func < (Token, Token) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/token\/_(_:_:)-9ee4v","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/token\/_=(_:_:)-18zf1","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/token\/_=(_:_:)-9jcfg","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/token\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/soulvercore\/token\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/token\/==(_:_:)","title":"static func == (Token, Token) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/token\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/token\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/token\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/token","title":"Token","type":"struct"},{"children":[{"title":"Basic properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/tokens","title":"var tokens: [Token]","type":"property"},{"path":"\/documentation\/soulvercore\/tokenlist\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/soulvercore\/tokenlist\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/tokenlist\/metadata","title":"var metadata: TokenListMetadata","type":"property"},{"title":"Checking for the presence of various token types in this list","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/typeprecheck(_:)","title":"func typePrecheck(TokenType) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/typesprecheck(_:)","title":"func typesPrecheck(TokenTypeSet) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/alltypeshavebeenpresentin(_:)","title":"func allTypesHaveBeenPresentIn(TokenTypeSet) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/anytypeshavebeenpresentin(_:)","title":"func anyTypesHaveBeenPresentIn(TokenTypeSet) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/onlytypeshavebeenpresentin(_:)","title":"func onlyTypesHaveBeenPresentIn(TokenTypeSet) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/scanfortokenwithtypes(_:ignoreparentswithtypes:)","title":"func scanForTokenWithTypes(TokenTypeSet, ignoreParentsWithTypes: TokenTypeSet?) -> Bool","type":"method"},{"title":"Searching for particular tokens","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/firsttoken(oftype:)","title":"func firstToken(ofType: TokenType) -> Token?","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/lasttoken(oftype:)","title":"func lastToken(ofType: TokenType) -> Token?","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/lasttoken(oftypes:)","title":"func lastToken(ofTypes: TokenTypeSet) -> Token?","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/tokenbefore(_:mustbe:ignorewhitespace:ignoretypes:)","title":"func tokenBefore(Token, mustBe: TokenType, ignoreWhitespace: Bool, ignoreTypes: TokenTypeSet?) -> Token?","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/tokenafter(_:mustbe:ignorewhitespace:ignoretypes:)","title":"func tokenAfter(Token, mustBe: TokenType, ignoreWhitespace: Bool, ignoreTypes: TokenTypeSet?) -> Token?","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/findparentof(childtoken:highestlevelparent:inrange:)","title":"func findParentOf(childToken: Token, highestLevelParent: Bool, inRange: ClosedRange<Int>?) -> Token?","type":"method"},{"title":"Getting multiple tokens by type","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/tokensoftype(_:)","title":"func tokensOfType(TokenType) -> [Token]","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/tokensoftypes(_:)","title":"func tokensOfTypes(TokenTypeSet) -> [Token]","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/alltokensoftype(_:excludingtokenswhereparentisin:)","title":"func allTokensOfType(TokenType, excludingTokensWhereParentIsIn: TokenTypeSet) -> [Token]","type":"method"},{"title":"Getting tokens by index","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/tokenfor(tokenindex:)","title":"func tokenFor(tokenIndex: TokenIndex) -> Token?","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/tokenindexfor(token:)","title":"func tokenIndexFor(token: Token) -> TokenIndex?","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/tokenfor(characterindex:ignorewhitespace:endoflinereturnslasttoken:)","title":"func tokenFor(characterIndex: Int, ignoreWhitespace: Bool, endOfLineReturnsLastToken: Bool) -> Token?","type":"method"},{"title":"Enumerating tokens & sublists","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/tokenlistenumerationblock","title":"TokenList.TokenListEnumerationBlock","type":"typealias"},{"path":"\/documentation\/soulvercore\/tokenlist\/enumeratealltokensoftype(_:reversed:enumerationblock:)","title":"func enumerateAllTokensOfType(TokenType, reversed: Bool, enumerationBlock: TokenListEnumerationBlock)","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/enumeratesublists(reversed:includeself:enumerationblock:)","title":"func enumerateSublists(reversed: Bool, includeSelf: Bool, enumerationBlock: (_ subList: TokenList, _ parent: Token?) -> Void)","type":"method"},{"title":"Extracting a string expression","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/expressionafter(_:)","title":"func expressionAfter(Token) -> String","type":"method"},{"path":"\/documentation\/soulvercore\/tokenlist\/expressionbefore(_:)","title":"func expressionBefore(Token) -> String","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/expressionbyreplacingtokensof(types:exceptwhereparentisin:replacementblock:)","title":"func expressionByReplacingTokensOf(types: TokenTypeSet, exceptWhereParentIsIn: TokenTypeSet?, replacementBlock: (Token) -> String?) -> String","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/subscript(_:)","title":"subscript(Int) -> Token","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/soulvercore\/tokenlist\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/tokenlist\/==(_:_:)","title":"static func == (TokenList, TokenList) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/tokenlist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlist\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/tokenlist\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/tokenlist","title":"TokenList","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlistmetadata\/form","title":"let form: TokenListForm","type":"property"}],"path":"\/documentation\/soulvercore\/tokenlistmetadata","title":"TokenListMetadata","type":"struct"},{"children":[{"title":"Single entities","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlistform\/singlenumber(value:)","title":"case singleNumber(value: Decimal)","type":"case"},{"path":"\/documentation\/soulvercore\/tokenlistform\/singleunitexpression(value:)","title":"case singleUnitExpression(value: UnitExpression)","type":"case"},{"path":"\/documentation\/soulvercore\/tokenlistform\/singledatestamp(value:)","title":"case singleDatestamp(value: Datestamp)","type":"case"},{"title":"Conversions","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlistform\/conversion(fromunit:tounit:quantity:)","title":"case conversion(fromUnit: SCUnit, toUnit: SCUnit, quantity: Decimal)","type":"case"},{"title":"Calendar calculations","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlistform\/dateseeking(startdate:timespan:direction:)","title":"case dateSeeking(startDate: Datestamp, timespan: Timespan, direction: Calendar.SearchDirection)","type":"case"},{"path":"\/documentation\/soulvercore\/tokenlistform\/unituntildateseeking(unit:todate:)","title":"case unitUntilDateSeeking(unit: SCUnit, toDate: Datestamp)","type":"case"},{"path":"\/documentation\/soulvercore\/tokenlistform\/intervalbetweendatesseeking(startdate:enddate:unit:)","title":"case intervalBetweenDatesSeeking(startDate: Datestamp, endDate: Datestamp, unit: SCUnit?)","type":"case"},{"title":"Timezone Calculations","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlistform\/timeatplaceseeking(place:)","title":"case timeAtPlaceSeeking(place: Place)","type":"case"},{"path":"\/documentation\/soulvercore\/tokenlistform\/timedifferencebetweenplacesseeking(firstplace:secondplace:)","title":"case timeDifferenceBetweenPlacesSeeking(firstPlace: Place, secondPlace: Place)","type":"case"},{"path":"\/documentation\/soulvercore\/tokenlistform\/timeconversiontoplace(fromdate:toplace:)","title":"case timeConversionToPlace(fromDate: Datestamp, toPlace: Place)","type":"case"},{"title":"Custom functions","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlistform\/customfunction(function:parameters:)","title":"case customFunction(function: CustomFunction, parameters: [EvaluationResult])","type":"case"},{"title":"Other","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlistform\/other","title":"case other","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenlistform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/tokenlistform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/tokenlistform","title":"TokenListForm","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentypeset\/init(types:)","title":"init(types: Set<TokenType>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentypeset\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/soulvercore\/tokentypeset\/types","title":"let types: Set<TokenType>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokentypeset\/contains(_:)","title":"func contains(TokenType) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/tokentypeset\/containstypesfrom(otherset:)","title":"func containsTypesFrom(otherSet: TokenTypeSet) -> Bool","type":"method"}],"path":"\/documentation\/soulvercore\/tokentypeset","title":"TokenTypeSet","type":"struct"},{"path":"\/documentation\/soulvercore\/tokenindex","title":"TokenIndex","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenindexpath\/init(tokenindex:lineindex:)","title":"init(tokenIndex: TokenIndex, lineIndex: LineIndex)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenindexpath\/lineindex","title":"let lineIndex: LineIndex","type":"property"},{"path":"\/documentation\/soulvercore\/tokenindexpath\/tokenindex","title":"let tokenIndex: TokenIndex","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/tokenindexpath\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/tokenindexpath\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/tokenindexpath","title":"TokenIndexPath","type":"struct"},{"title":"Enums & type aliases","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unittype\/acceleration","title":"case acceleration","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/amountofsubstance","title":"case amountOfSubstance","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/angularvelocity","title":"case angularVelocity","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/area","title":"case area","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/concentrationmass","title":"case concentrationMass","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/currency","title":"case currency","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/datastorage","title":"case dataStorage","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/datatransfer","title":"case dataTransfer","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/dispersion","title":"case dispersion","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/duration","title":"case duration","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/electriccharge","title":"case electricCharge","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/electricconductance","title":"case electricConductance","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/electriccurrent","title":"case electricCurrent","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/electricpotential","title":"case electricPotential","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/electricresistance","title":"case electricResistance","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/electricalcapacitance","title":"case electricalCapacitance","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/electricalinductance","title":"case electricalInductance","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/energy","title":"case energy","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/force","title":"case force","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/framerate","title":"case frameRate","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/frames","title":"case frames","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/frequency","title":"case frequency","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/fuelconsumption","title":"case fuelConsumption","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/fueleconomy","title":"case fuelEconomy","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/illuminance","title":"case illuminance","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/length","title":"case length","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/magneticflux","title":"case magneticFlux","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/magneticfluxdensity","title":"case magneticFluxDensity","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/mass","title":"case mass","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/other","title":"case other","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/period","title":"case period","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/power","title":"case power","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/pressure","title":"case pressure","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/screendensity","title":"case screenDensity","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/speed","title":"case speed","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/substanceconcentraion","title":"case substanceConcentraion","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/temperature","title":"case temperature","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/torque","title":"case torque","type":"case"},{"path":"\/documentation\/soulvercore\/unittype\/volume","title":"case volume","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unittype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unittype\/associatedotherunits","title":"var associatedOtherUnits: [UnitIdentifier]","type":"property"},{"path":"\/documentation\/soulvercore\/unittype\/baseunitidentifier","title":"var baseUnitIdentifier: UnitIdentifier","type":"property"},{"path":"\/documentation\/soulvercore\/unittype\/label","title":"var label: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unittype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/unittype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unittype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unittype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unittype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/unittype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/unittype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/unittype","title":"UnitType","type":"enum"},{"children":[{"title":"Angles","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/degrees","title":"case degrees","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/arcminutes","title":"case arcMinutes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/arcseconds","title":"case arcSeconds","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/radians","title":"case radians","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gradians","title":"case gradians","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/revolutions","title":"case revolutions","type":"case"},{"title":"Area","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squaremegameters","title":"case squareMegameters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squarekilometers","title":"case squareKilometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squaremeters","title":"case squareMeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squarecentimeters","title":"case squareCentimeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squaredecimeters","title":"case squareDecimeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squaremillimeters","title":"case squareMillimeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squaremicrometers","title":"case squareMicrometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squarenanometers","title":"case squareNanometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squareinches","title":"case squareInches","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squarefeet","title":"case squareFeet","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squareyards","title":"case squareYards","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/squaremiles","title":"case squareMiles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/acres","title":"case acres","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/ares","title":"case ares","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/hectares","title":"case hectares","type":"case"},{"title":"Fuel Consumption","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/litersperkilometer","title":"case litersPerKilometer","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/litersper100kilometers","title":"case litersPer100Kilometers","type":"case"},{"title":"Fuel Economy","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milesperimperialgallon","title":"case milesPerImperialGallon","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milespergallon","title":"case milesPerGallon","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gramsperliter","title":"case gramsPerLiter","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilometersperliter","title":"case kilometersPerLiter","type":"case"},{"title":"Duration","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/seconds","title":"case seconds","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/minutes","title":"case minutes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/hours","title":"case hours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/days","title":"case days","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/weekdays","title":"case weekdays","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nights","title":"case nights","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/weeks","title":"case weeks","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/months","title":"case months","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/years","title":"case years","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/picoseconds","title":"case picoseconds","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nanoseconds","title":"case nanoseconds","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microseconds","title":"case microseconds","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milliseconds","title":"case milliseconds","type":"case"},{"title":"Frequency","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/joules","title":"case joules","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilojoules","title":"case kilojoules","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megajoules","title":"case megajoules","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gigajoules","title":"case gigajoules","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilocalories","title":"case kilocalories","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/calories","title":"case calories","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/wattseconds","title":"case wattSeconds","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/wattminutes","title":"case wattMinutes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/watthours","title":"case wattHours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilowatthours","title":"case kilowattHours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megawatthours","title":"case megawattHours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gigawatthours","title":"case gigawattHours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/terawatthours","title":"case terawattHours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/terahertz","title":"case terahertz","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gigahertz","title":"case gigahertz","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megahertz","title":"case megahertz","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilohertz","title":"case kilohertz","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/hertz","title":"case hertz","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/millihertz","title":"case millihertz","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microhertz","title":"case microhertz","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nanohertz","title":"case nanohertz","type":"case"},{"title":"FPS","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/framespersecond","title":"case framesPerSecond","type":"case"},{"title":"Angular Velocity","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/radianspersecond","title":"case radiansPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/revolutionspersecond","title":"case revolutionsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/revolutionsperminute","title":"case revolutionsPerMinute","type":"case"},{"title":"Length","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megameters","title":"case megameters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/hectokilometers","title":"case hectokilometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilometers","title":"case kilometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/hectometers","title":"case hectometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/decameters","title":"case decameters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/meters","title":"case meters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/decimeters","title":"case decimeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/centimeters","title":"case centimeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/millimeters","title":"case millimeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/micrometers","title":"case micrometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nanometers","title":"case nanometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/picometers","title":"case picometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/inches","title":"case inches","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/feet","title":"case feet","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/yards","title":"case yards","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/miles","title":"case miles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/scandinavianmiles","title":"case scandinavianMiles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/lightyears","title":"case lightyears","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/astronomicalunits","title":"case astronomicalUnits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nauticalmiles","title":"case nauticalMiles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/fathoms","title":"case fathoms","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/furlongs","title":"case furlongs","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/parsecs","title":"case parsecs","type":"case"},{"title":"Luminosity","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/lux","title":"case lux","type":"case"},{"title":"Mass","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilograms","title":"case kilograms","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/grams","title":"case grams","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/decigrams","title":"case decigrams","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/centigrams","title":"case centigrams","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milligrams","title":"case milligrams","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/micrograms","title":"case micrograms","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nanograms","title":"case nanograms","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/picograms","title":"case picograms","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/ounces","title":"case ounces","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/pounds","title":"case pounds","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/stones","title":"case stones","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/metrictons","title":"case metricTons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/shorttons","title":"case shortTons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/carats","title":"case carats","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/ouncestroy","title":"case ouncesTroy","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/slugs","title":"case slugs","type":"case"},{"title":"Power","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/terawatts","title":"case terawatts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gigawatts","title":"case gigawatts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megawatts","title":"case megawatts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilowatts","title":"case kilowatts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/watts","title":"case watts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milliwatts","title":"case milliwatts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microwatts","title":"case microwatts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nanowatts","title":"case nanowatts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/picowatts","title":"case picowatts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/femtowatts","title":"case femtowatts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/horsepower","title":"case horsepower","type":"case"},{"title":"Pressure","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/pascals","title":"case pascals","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gigapascals","title":"case gigapascals","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megapascals","title":"case megapascals","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilopascals","title":"case kilopascals","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/hectopascals","title":"case hectopascals","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/inchesofmercury","title":"case inchesOfMercury","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/atmospheres","title":"case atmospheres","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/bars","title":"case bars","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/millibars","title":"case millibars","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/millimetersofmercury","title":"case millimetersOfMercury","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/poundsforcepersquareinch","title":"case poundsForcePerSquareInch","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilopoundsforcepersquareinch","title":"case kilopoundsForcePerSquareInch","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megapoundsforcepersquareinch","title":"case megapoundsForcePerSquareInch","type":"case"},{"title":"Speed","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/meterspersecond","title":"case metersPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/feetpersecond","title":"case feetPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilometersperhour","title":"case kilometersPerHour","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milesperhour","title":"case milesPerHour","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/knots","title":"case knots","type":"case"},{"title":"Temperature","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kelvin","title":"case kelvin","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/celsius","title":"case celsius","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/fahrenheit","title":"case fahrenheit","type":"case"},{"title":"Volume","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/liters","title":"case liters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kiloliters","title":"case kiloliters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megaliters","title":"case megaliters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milliliters","title":"case milliliters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microliters","title":"case microliters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nanoliters","title":"case nanoliters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/centiliters","title":"case centiliters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/deciliters","title":"case deciliters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubickilometers","title":"case cubicKilometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubicmeters","title":"case cubicMeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubicdecimeters","title":"case cubicDecimeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubiccentimeters","title":"case cubicCentimeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubicmillimeters","title":"case cubicMillimeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubicmicrometers","title":"case cubicMicrometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubicnanometers","title":"case cubicNanometers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubicinches","title":"case cubicInches","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubicfeet","title":"case cubicFeet","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubicyards","title":"case cubicYards","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cubicmiles","title":"case cubicMiles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/acrefeet","title":"case acreFeet","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/bushels","title":"case bushels","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/teaspoons","title":"case teaspoons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/tablespoons","title":"case tablespoons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/fluidounces","title":"case fluidOunces","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cups","title":"case cups","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/pints","title":"case pints","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/quarts","title":"case quarts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gallons","title":"case gallons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/imperialteaspoons","title":"case imperialTeaspoons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/imperialtablespoons","title":"case imperialTablespoons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/imperialfluidounces","title":"case imperialFluidOunces","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/imperialpints","title":"case imperialPints","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/imperialquarts","title":"case imperialQuarts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/imperialgallons","title":"case imperialGallons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/metriccups","title":"case metricCups","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/metricteaspoons","title":"case metricTeaspoons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/metrictablespoons","title":"case metricTablespoons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/metricautablespoons","title":"case metricAUTablespoons","type":"case"},{"title":"Pixel Density","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/ppi","title":"case ppi","type":"case"},{"title":"CSS","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/pixel","title":"case pixel","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/point","title":"case point","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/em","title":"case em","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/rem","title":"case rem","type":"case"},{"title":"Frames","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/frames","title":"case frames","type":"case"},{"title":"Concentration Mass","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milligramsperdeciliter","title":"case milligramsPerDeciliter","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/partspermillion","title":"case partsPerMillion","type":"case"},{"title":"Amount of Substance","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/moles","title":"case moles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/millimoles","title":"case millimoles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/micromoles","title":"case micromoles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nanomoles","title":"case nanomoles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/molar","title":"case molar","type":"case"},{"title":"Force","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/newtons","title":"case newtons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilonewtons","title":"case kilonewtons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/meganewtons","title":"case meganewtons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/giganewtons","title":"case giganewtons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/millinewtons","title":"case millinewtons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/micronewtons","title":"case micronewtons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nanonewtons","title":"case nanonewtons","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/poundals","title":"case poundals","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/poundsofforce","title":"case poundsOfForce","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/ouncesofforce","title":"case ouncesOfForce","type":"case"},{"title":"Torque","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/newtonmeters","title":"case newtonMeters","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/poundfeet","title":"case poundFeet","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/poundinches","title":"case poundInches","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/ounceinches","title":"case ounceInches","type":"case"},{"title":"Acceleration","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/meterspersecondsquared","title":"case metersPerSecondSquared","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/feetpersecondsquared","title":"case feetPerSecondSquared","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gravity","title":"case gravity","type":"case"},{"title":"Electrical Current","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/coulombs","title":"case coulombs","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megaamperehours","title":"case megaampereHours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kiloamperehours","title":"case kiloampereHours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/amperehours","title":"case ampereHours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milliamperehours","title":"case milliampereHours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microamperehours","title":"case microampereHours","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megaamperes","title":"case megaamperes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kiloamperes","title":"case kiloamperes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/amperes","title":"case amperes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milliamperes","title":"case milliamperes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microamperes","title":"case microamperes","type":"case"},{"title":"Electrical Potential","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megavolts","title":"case megavolts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilovolts","title":"case kilovolts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/volts","title":"case volts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/millivolts","title":"case millivolts","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microvolts","title":"case microvolts","type":"case"},{"title":"Electrical Resistence","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megaohms","title":"case megaohms","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kiloohms","title":"case kiloohms","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/ohms","title":"case ohms","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milliohms","title":"case milliohms","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microohms","title":"case microohms","type":"case"},{"title":"CElectrical onductance","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/siemens","title":"case siemens","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilosiemens","title":"case kilosiemens","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megasiemens","title":"case megasiemens","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/millisiemens","title":"case millisiemens","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microsiemens","title":"case microsiemens","type":"case"},{"title":"Electrical Inductance","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/henrys","title":"case henrys","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilohenrys","title":"case kilohenrys","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megahenrys","title":"case megahenrys","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/millihenrys","title":"case millihenrys","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microhenrys","title":"case microhenrys","type":"case"},{"title":"Electrical Capacitance","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/farads","title":"case farads","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilofarads","title":"case kilofarads","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megafarads","title":"case megafarads","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/millifarads","title":"case millifarads","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microfarads","title":"case microfarads","type":"case"},{"title":"Magnetic Flux","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/webers","title":"case webers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilowebers","title":"case kilowebers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megawebers","title":"case megawebers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milliwebers","title":"case milliwebers","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microwebers","title":"case microwebers","type":"case"},{"title":"Magnetic Flux Density","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/teslas","title":"case teslas","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kiloteslas","title":"case kiloteslas","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megateslas","title":"case megateslas","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/milliteslas","title":"case milliteslas","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/microteslas","title":"case microteslas","type":"case"},{"title":"Data Storage","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/bytes","title":"case bytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/bits","title":"case bits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/nibbles","title":"case nibbles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/yottabytes","title":"case yottabytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/zettabytes","title":"case zettabytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/exabytes","title":"case exabytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/petabytes","title":"case petabytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/terabytes","title":"case terabytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gigabytes","title":"case gigabytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megabytes","title":"case megabytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilobytes","title":"case kilobytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/yottabits","title":"case yottabits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/zettabits","title":"case zettabits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/exabits","title":"case exabits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/petabits","title":"case petabits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/terabits","title":"case terabits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gigabits","title":"case gigabits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megabits","title":"case megabits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilobits","title":"case kilobits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/yobibytes","title":"case yobibytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/zebibytes","title":"case zebibytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/exbibytes","title":"case exbibytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/pebibytes","title":"case pebibytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/tebibytes","title":"case tebibytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gibibytes","title":"case gibibytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/mebibytes","title":"case mebibytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kibibytes","title":"case kibibytes","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/yobibits","title":"case yobibits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/zebibits","title":"case zebibits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/exbibits","title":"case exbibits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/pebibits","title":"case pebibits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/tebibits","title":"case tebibits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gibibits","title":"case gibibits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/mebibits","title":"case mebibits","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kibibits","title":"case kibibits","type":"case"},{"title":"Data Transfer``","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/bytespersecond","title":"case bytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/bitspersecond","title":"case bitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/yottabytespersecond","title":"case yottabytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/zettabytespersecond","title":"case zettabytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/exabytespersecond","title":"case exabytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/petabytespersecond","title":"case petabytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/terabytespersecond","title":"case terabytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gigabytespersecond","title":"case gigabytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megabytespersecond","title":"case megabytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilobytespersecond","title":"case kilobytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/yottabitspersecond","title":"case yottabitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/zettabitspersecond","title":"case zettabitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/exabitspersecond","title":"case exabitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/petabitspersecond","title":"case petabitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/terabitspersecond","title":"case terabitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gigabitspersecond","title":"case gigabitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/megabitspersecond","title":"case megabitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kilobitspersecond","title":"case kilobitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/yobibytespersecond","title":"case yobibytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/zebibytespersecond","title":"case zebibytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/exbibytespersecond","title":"case exbibytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/pebibytespersecond","title":"case pebibytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/tebibytespersecond","title":"case tebibytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gibibytespersecond","title":"case gibibytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/mebibytespersecond","title":"case mebibytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kibibytespersecond","title":"case kibibytesPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/yobibitspersecond","title":"case yobibitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/zebibitspersecond","title":"case zebibitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/exbibitspersecond","title":"case exbibitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/pebibitspersecond","title":"case pebibitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/tebibitspersecond","title":"case tebibitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/gibibitspersecond","title":"case gibibitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/mebibitspersecond","title":"case mebibitsPerSecond","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/kibibitspersecond","title":"case kibibitsPerSecond","type":"case"},{"title":"Currencies","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyada","title":"case currencyADA","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyaed","title":"case currencyAED","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyafn","title":"case currencyAFN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyall","title":"case currencyALL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyamd","title":"case currencyAMD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyang","title":"case currencyANG","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyaoa","title":"case currencyAOA","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyars","title":"case currencyARS","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyaud","title":"case currencyAUD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyawg","title":"case currencyAWG","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyazn","title":"case currencyAZN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybam","title":"case currencyBAM","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybbd","title":"case currencyBBD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybch","title":"case currencyBCH","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybdt","title":"case currencyBDT","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybgn","title":"case currencyBGN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybhd","title":"case currencyBHD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybif","title":"case currencyBIF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybmd","title":"case currencyBMD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybnb","title":"case currencyBNB","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybnd","title":"case currencyBND","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybob","title":"case currencyBOB","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybrl","title":"case currencyBRL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybsd","title":"case currencyBSD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybsv","title":"case currencyBSV","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybtc","title":"case currencyBTC","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybtn","title":"case currencyBTN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybwp","title":"case currencyBWP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybyn","title":"case currencyBYN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybzd","title":"case currencyBZD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencycad","title":"case currencyCAD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencycdf","title":"case currencyCDF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencychf","title":"case currencyCHF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyclf","title":"case currencyCLF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyclp","title":"case currencyCLP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencycny","title":"case currencyCNY","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencycop","title":"case currencyCOP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencycrc","title":"case currencyCRC","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencycuc","title":"case currencyCUC","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencycve","title":"case currencyCVE","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyczk","title":"case currencyCZK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencydash","title":"case currencyDASH","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencydjf","title":"case currencyDJF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencydkk","title":"case currencyDKK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencydoge","title":"case currencyDOGE","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencydop","title":"case currencyDOP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencydzd","title":"case currencyDZD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyegp","title":"case currencyEGP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyeos","title":"case currencyEOS","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyern","title":"case currencyERN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyetb","title":"case currencyETB","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyetc","title":"case currencyETC","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyeth","title":"case currencyETH","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyeur","title":"case currencyEUR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyfjd","title":"case currencyFJD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyfkp","title":"case currencyFKP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencygbp","title":"case currencyGBP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencygel","title":"case currencyGEL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyggp","title":"case currencyGGP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyghs","title":"case currencyGHS","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencygip","title":"case currencyGIP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencygmd","title":"case currencyGMD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencygnf","title":"case currencyGNF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencygtq","title":"case currencyGTQ","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencygyd","title":"case currencyGYD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyhkd","title":"case currencyHKD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyhnl","title":"case currencyHNL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyhrk","title":"case currencyHRK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyhtg","title":"case currencyHTG","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyhuf","title":"case currencyHUF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyidr","title":"case currencyIDR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyils","title":"case currencyILS","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyimp","title":"case currencyIMP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyinr","title":"case currencyINR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyiqd","title":"case currencyIQD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyirr","title":"case currencyIRR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyisk","title":"case currencyISK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyjep","title":"case currencyJEP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyjmd","title":"case currencyJMD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyjod","title":"case currencyJOD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyjpy","title":"case currencyJPY","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencykes","title":"case currencyKES","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencykgs","title":"case currencyKGS","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencykhr","title":"case currencyKHR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencykmf","title":"case currencyKMF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencykpw","title":"case currencyKPW","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencykrw","title":"case currencyKRW","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencykwd","title":"case currencyKWD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencykyd","title":"case currencyKYD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencykzt","title":"case currencyKZT","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencylak","title":"case currencyLAK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencylbp","title":"case currencyLBP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencylkr","title":"case currencyLKR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencylrd","title":"case currencyLRD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencylsl","title":"case currencyLSL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyltc","title":"case currencyLTC","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyltl","title":"case currencyLTL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencylvl","title":"case currencyLVL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencylyd","title":"case currencyLYD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymad","title":"case currencyMAD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymdl","title":"case currencyMDL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymga","title":"case currencyMGA","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymkd","title":"case currencyMKD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymmk","title":"case currencyMMK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymnt","title":"case currencyMNT","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymop","title":"case currencyMOP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymro","title":"case currencyMRO","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymur","title":"case currencyMUR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymvr","title":"case currencyMVR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymwk","title":"case currencyMWK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymxn","title":"case currencyMXN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymyr","title":"case currencyMYR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencymzn","title":"case currencyMZN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencynad","title":"case currencyNAD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyneo","title":"case currencyNEO","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyngn","title":"case currencyNGN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencynio","title":"case currencyNIO","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencynok","title":"case currencyNOK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencynpr","title":"case currencyNPR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencynzd","title":"case currencyNZD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyomr","title":"case currencyOMR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencypab","title":"case currencyPAB","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencypen","title":"case currencyPEN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencypgk","title":"case currencyPGK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyphp","title":"case currencyPHP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencypkr","title":"case currencyPKR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencypln","title":"case currencyPLN","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencypyg","title":"case currencyPYG","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyqar","title":"case currencyQAR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyron","title":"case currencyRON","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyrsd","title":"case currencyRSD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyrub","title":"case currencyRUB","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyrwf","title":"case currencyRWF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysar","title":"case currencySAR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysbd","title":"case currencySBD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyscr","title":"case currencySCR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysdg","title":"case currencySDG","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysek","title":"case currencySEK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysgd","title":"case currencySGD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyshp","title":"case currencySHP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysll","title":"case currencySLL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysos","title":"case currencySOS","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysol","title":"case currencySOL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyavax","title":"case currencyAVAX","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyluna","title":"case currencyLUNA","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencydot","title":"case currencyDOT","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencypol","title":"case currencyPOL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyshib","title":"case currencySHIB","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysrd","title":"case currencySRD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencystd","title":"case currencySTD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysvc","title":"case currencySVC","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysyp","title":"case currencySYP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyszl","title":"case currencySZL","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencythb","title":"case currencyTHB","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencytjs","title":"case currencyTJS","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencytmt","title":"case currencyTMT","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencytnd","title":"case currencyTND","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencytop","title":"case currencyTOP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencytrx","title":"case currencyTRX","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencytry","title":"case currencyTRY","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyttd","title":"case currencyTTD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencytwd","title":"case currencyTWD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencytzs","title":"case currencyTZS","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyuah","title":"case currencyUAH","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyugx","title":"case currencyUGX","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyusd","title":"case currencyUSD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyusdt","title":"case currencyUSDT","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyuyu","title":"case currencyUYU","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyuzs","title":"case currencyUZS","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyvef","title":"case currencyVEF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyvnd","title":"case currencyVND","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyvuv","title":"case currencyVUV","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencywst","title":"case currencyWST","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyxaf","title":"case currencyXAF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyxag","title":"case currencyXAG","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyxau","title":"case currencyXAU","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyxcd","title":"case currencyXCD","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyxdr","title":"case currencyXDR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyxlm","title":"case currencyXLM","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyxmr","title":"case currencyXMR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyxof","title":"case currencyXOF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyxpf","title":"case currencyXPF","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyxrp","title":"case currencyXRP","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyyer","title":"case currencyYER","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyzar","title":"case currencyZAR","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyzmk","title":"case currencyZMK","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyzmw","title":"case currencyZMW","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyzwl","title":"case currencyZWL","type":"case"},{"title":"Sub-domination currencies","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencydollarcents","title":"case currencyDollarCents","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencybritishpence","title":"case currencyBritishPence","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencyeurocents","title":"case currencyEuroCents","type":"case"},{"title":"Sub-domination crypto-currencies","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencysatoshi","title":"case currencySatoshi","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencywei","title":"case currencyWei","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencygwei","title":"case currencyGwei","type":"case"},{"title":"Other","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/cycles","title":"case cycles","type":"case"},{"path":"\/documentation\/soulvercore\/unitidentifier\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/currencycode","title":"var currencyCode: CurrencyCode?","type":"property"},{"path":"\/documentation\/soulvercore\/unitidentifier\/motherunitidentifier","title":"var motherUnitIdentifier: UnitIdentifier","type":"property"},{"path":"\/documentation\/soulvercore\/unitidentifier\/unit","title":"var unit: SCUnit","type":"property"},{"path":"\/documentation\/soulvercore\/unitidentifier\/unittype","title":"var unitType: UnitType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/unitidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitidentifier\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/unitidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/unitidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/unitidentifier","title":"UnitIdentifier","type":"enum"},{"children":[{"title":"General Functions","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/halfof","title":"case halfOf","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/lesserof","title":"case lesserOf","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/greaterof","title":"case greaterOf","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/clamp","title":"case clamp","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/midpoint","title":"case midpoint","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/proportionsfindnumerator","title":"case proportionsFindNumerator","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/proportionsfinddenominator","title":"case proportionsFindDenominator","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/remainder","title":"case remainder","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/multipliedby","title":"case multipliedBy","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dividedby","title":"case dividedBy","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/tothepowerof","title":"case toThePowerOf","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/makerandomnumber","title":"case makeRandomNumber","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/gcd","title":"case gcd","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/lcm","title":"case lcm","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/squareroot","title":"case squareRoot","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/cubedroot","title":"case cubedRoot","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/nthroot","title":"case nthRoot","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/nthlog","title":"case nthLog","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/nthlogreversed","title":"case nthLogReversed","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/tonearestx","title":"case toNearestX","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/isprime","title":"case isPrime","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/combination","title":"case combination","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/permutation","title":"case permutation","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/reversedcombination","title":"case reversedCombination","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/reversedpermutation","title":"case reversedPermutation","type":"case"},{"title":"Percentages","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/percentof","title":"case percentOf","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/percentoff","title":"case percentOff","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/percenton","title":"case percentOn","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/ispercentofwhat","title":"case isPercentOfWhat","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/ispercentoffwhat","title":"case isPercentOffWhat","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/ispercentonwhat","title":"case isPercentOnWhat","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/iswhatpercentwith","title":"case isWhatPercentWith","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/ispercentofwhatclassic","title":"case isPercentOfWhatClassic","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/ispercentoffwhatclassic","title":"case isPercentOffWhatClassic","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/ispercentonwhatclassic","title":"case isPercentOnWhatClassic","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/iswhatpercentof","title":"case isWhatPercentOf","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/iswhatpercentoff","title":"case isWhatPercentOff","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/iswhatpercenton","title":"case isWhatPercentOn","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/xofy","title":"case xOfY","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/xony","title":"case xOnY","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/xoffy","title":"case xOffY","type":"case"},{"title":"Reversed Percentages (number %, rather than % number)","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/reversedpercentof","title":"case reversedPercentOf","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/reversedpercentoff","title":"case reversedPercentOff","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/reversedpercenton","title":"case reversedPercentOn","type":"case"},{"title":"Multipliers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/iswhatmultiplierof","title":"case isWhatMultiplierOf","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/iswhatmultiplieron","title":"case isWhatMultiplierOn","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/iswhatmultiplieroff","title":"case isWhatMultiplierOff","type":"case"},{"title":"Statistics","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/statisticoflist","title":"case statisticOfList","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/statisticoftag","title":"case statisticOfTag","type":"case"},{"title":"Sales Tax","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/salestaxin","title":"case salesTaxIn","type":"case"},{"title":"Exponential Change","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/exponentialgrowth","title":"case exponentialGrowth","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/exponentialdecay","title":"case exponentialDecay","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/timerequiredforexponentialchange","title":"case timeRequiredForExponentialChange","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/growthoverexponentialchange","title":"case growthOverExponentialChange","type":"case"},{"title":"Linear change","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/timerequiredforlinearchange","title":"case timeRequiredForLinearChange","type":"case"},{"title":"Change","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/xtoyiswhatpercentage","title":"case xToYIsWhatPercentage","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/xtoyiswhatmultiplier","title":"case xToYIsWhatMultiplier","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/xtoy","title":"case xToY","type":"case"},{"title":"Date Intervals","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunitbetweendates","title":"case calendarUnitBetweenDates","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/inclusivecalendarunitbetweendates","title":"case inclusiveCalendarUnitBetweenDates","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/intervalbetweendates","title":"case intervalBetweenDates","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/inclusiveintervalbetweendates","title":"case inclusiveIntervalBetweenDates","type":"case"},{"title":"To\/since\/in a date","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunittodate","title":"case calendarUnitToDate","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunitsincedate","title":"case calendarUnitSinceDate","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunitindate","title":"case calendarUnitInDate","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunitleftindate","title":"case calendarUnitLeftInDate","type":"case"},{"title":"To\/since\/in a datespan","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunittodatespan","title":"case calendarUnitToDatespan","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunitindatespan","title":"case calendarUnitInDatespan","type":"case"},{"title":"Dates relative to the present","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunitexpressionago","title":"case calendarUnitExpressionAgo","type":"case"},{"title":"Point before\/after x","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunitexpressionbeforedate","title":"case calendarUnitExpressionBeforeDate","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunitexpressionafterdate","title":"case calendarUnitExpressionAfterDate","type":"case"},{"title":"Halfway point","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/halfwaybetweendates","title":"case halfwayBetweenDates","type":"case"},{"title":"Weekdays","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/weekdayaftertimespan","title":"case weekdayAfterTimespan","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dayofweekondate","title":"case dayOfWeekOnDate","type":"case"},{"title":"Numbered Days & Weeks in a given month or year","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dayofmonth","title":"case dayOfMonth","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dayofyear","title":"case dayOfYear","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dayofmonthondate","title":"case dayOfMonthOnDate","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dayofyearondate","title":"case dayOfYearOnDate","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/weekofmonth","title":"case weekOfMonth","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/weekofmonthondate","title":"case weekOfMonthOnDate","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/weekofyear","title":"case weekOfYear","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/weekofyearondate","title":"case weekOfYearOnDate","type":"case"},{"title":"Timezones","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/timeintimezone","title":"case timeInTimezone","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dateintimezone","title":"case dateInTimezone","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/differencebetweentimezones","title":"case differenceBetweenTimezones","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/generatetimestamp","title":"case generateTimestamp","type":"case"},{"title":"Video Editing","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/formframetime","title":"case formFrametime","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/framestoframetime","title":"case framesToFrametime","type":"case"},{"title":"Timestamp\/Laptime\/Frametime intervals","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/intervalbetweentimestamps","title":"case intervalBetweenTimestamps","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/intervalbetweenlaptimes","title":"case intervalBetweenLaptimes","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/framesbetweenframetimes","title":"case framesBetweenFrametimes","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/intervalbetweenframetimes","title":"case intervalBetweenFrametimes","type":"case"},{"title":"Units","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/unitconversion","title":"case unitConversion","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/unitinunitexpression","title":"case unitInUnitExpression","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/calendarunitintimespan","title":"case calendarUnitInTimespan","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/rateunitchange","title":"case rateUnitChange","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/rateforaduration","title":"case rateForADuration","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/substanceweighttovolumeconversion","title":"case substanceWeightToVolumeConversion","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/densityofsubstance","title":"case densityOfSubstance","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/speedfortime","title":"case speedForTime","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/timeatmultiplier","title":"case timeAtMultiplier","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/timesavedatmultiplier","title":"case timeSavedAtMultiplier","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/poweratrotation","title":"case powerAtRotation","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/historicalcurrencyconversion","title":"case historicalCurrencyConversion","type":"case"},{"title":"Financial","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/presentvalue","title":"case presentValue","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/returnoninvestmentafter","title":"case returnOnInvestmentAfter","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/returnoninvestment","title":"case returnOnInvestment","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/investmentrequiredforreturn","title":"case investmentRequiredForReturn","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/totalinterestonloanrepayment","title":"case totalInterestOnLoanRepayment","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/annualinterestonloanrepayment","title":"case annualInterestOnLoanRepayment","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/monthlyinterestonloanrepayment","title":"case monthlyInterestOnLoanRepayment","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/totalloanrepayment","title":"case totalLoanRepayment","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/annualloanrepayment","title":"case annualLoanRepayment","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/monthlyloanrepayment","title":"case monthlyLoanRepayment","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/compoundinterest","title":"case compoundInterest","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/compoundinterestcompoundingmonthly","title":"case compoundInterestCompoundingMonthly","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/compoundinterestcompoundingquarterly","title":"case compoundInterestCompoundingQuarterly","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/compoundinterestsansprincipal","title":"case compoundInterestSansPrincipal","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/compoundinterestsansprincipalcompoundingmonthly","title":"case compoundInterestSansPrincipalCompoundingMonthly","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/compoundinterestsansprincipalcompoundingquarterly","title":"case compoundInterestSansPrincipalCompoundingQuarterly","type":"case"},{"title":"Inflation","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dollarworthadjustedforinflation","title":"case dollarWorthAdjustedForInflation","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/predicteddollarworthgiveninflation","title":"case predictedDollarWorthGivenInflation","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dollarworthfromtodayadjustedforinflation","title":"case dollarWorthFromTodayAdjustedForInflation","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dollarworthtotodayadjustedforinflation","title":"case dollarWorthToTodayAdjustedForInflation","type":"case"},{"title":"GPS","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/gpscoordinatesofplace","title":"case gpsCoordinatesOfPlace","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/longitudeofplace","title":"case longitudeOfPlace","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/latitudeofplace","title":"case latitudeOfPlace","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/distancebetweenplaces","title":"case distanceBetweenPlaces","type":"case"},{"title":"Screen Density","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/screendensity","title":"case screenDensity","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/pixelsinlengthatppi","title":"case pixelsInLengthAtPPI","type":"case"},{"title":"Cars","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/tyrespeed","title":"case tyreSpeed","type":"case"},{"title":"Daily Weather","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/lowtemperature","title":"case lowTemperature","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/hightemperature","title":"case highTemperature","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/precipitationchance","title":"case precipitationChance","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/rainfallamount","title":"case rainfallAmount","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/snowfallamount","title":"case snowfallAmount","type":"case"},{"title":"Current Weather","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/apparenttemperature","title":"case apparentTemperature","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/currenttemperature","title":"case currentTemperature","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/weatherconditions","title":"case weatherConditions","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/humidity","title":"case humidity","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/cloudcover","title":"case cloudCover","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/visibility","title":"case visibility","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/winddirection","title":"case windDirection","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/windspeed","title":"case windSpeed","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/dewpoint","title":"case dewPoint","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/uvindex","title":"case uvIndex","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/pressuredirection","title":"case pressureDirection","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/pressure","title":"case pressure","type":"case"},{"title":"Astrological","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/sunrise","title":"case sunrise","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/sunset","title":"case sunset","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/moonrise","title":"case moonrise","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/moonset","title":"case moonset","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/moonphase","title":"case moonPhase","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/lunarday","title":"case lunarDay","type":"case"},{"title":"String Literals","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/countofliteral","title":"case countOfLiteral","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/extractliteralprefix","title":"case extractLiteralPrefix","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/extractliteralsuffix","title":"case extractLiteralSuffix","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/parseliteral","title":"case parseLiteral","type":"case"},{"title":"Other\/Experimental","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/scrubnumberwithspecifiedrange","title":"case scrubNumberWithSpecifiedRange","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/declaregenericunit","title":"case declareGenericUnit","type":"case"},{"path":"\/documentation\/soulvercore\/functionidentifier\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/returntype","title":"var returnType: TokenType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/init(from:)-6acrr","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/soulvercore\/functionidentifier\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/functionidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/init(from:)-7fafu","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/functionidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/functionidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/functionidentifier","title":"FunctionIdentifier","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/statistictype\/average","title":"case average","type":"case"},{"path":"\/documentation\/soulvercore\/statistictype\/count","title":"case count","type":"case"},{"path":"\/documentation\/soulvercore\/statistictype\/gcd","title":"case gcd","type":"case"},{"path":"\/documentation\/soulvercore\/statistictype\/greater","title":"case greater","type":"case"},{"path":"\/documentation\/soulvercore\/statistictype\/lcm","title":"case lcm","type":"case"},{"path":"\/documentation\/soulvercore\/statistictype\/lesser","title":"case lesser","type":"case"},{"path":"\/documentation\/soulvercore\/statistictype\/median","title":"case median","type":"case"},{"path":"\/documentation\/soulvercore\/statistictype\/standarddeviation","title":"case standardDeviation","type":"case"},{"path":"\/documentation\/soulvercore\/statistictype\/total","title":"case total","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/statistictype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/statistictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/statistictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/statistictype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/statistictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/statistictype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/statistictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/statistictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/statistictype","title":"StatisticType","type":"enum"},{"path":"\/documentation\/soulvercore\/rawexpression","title":"RawExpression","type":"typealias"},{"path":"\/documentation\/soulvercore\/currencycode","title":"CurrencyCode","type":"typealias"},{"path":"\/documentation\/soulvercore\/scalarsymbol","title":"ScalarSymbol","type":"typealias"},{"title":"SoulverCore “primative” data types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/percentage\/init(value:)","title":"init(value: Decimal)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/percentage\/decimalvalue","title":"let decimalValue: Decimal","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/percentage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/percentage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/percentage","title":"Percentage","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/fraction\/decimalvalue","title":"let decimalValue: Decimal","type":"property"},{"path":"\/documentation\/soulvercore\/fraction\/unitvalue","title":"let unitValue: SCUnit?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/fraction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/fraction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/fraction","title":"Fraction","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/multiplier\/decimalvalue","title":"let decimalValue: Decimal","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/multiplier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/multiplier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/multiplier","title":"Multiplier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/salestax\/init(decimalvalue:)","title":"init(decimalValue: Decimal)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/salestax\/decimalvalue","title":"let decimalValue: Decimal","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/salestax\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/salestax\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/salestax","title":"SalesTax","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitexpression\/unit","title":"let unit: SCUnit","type":"property"},{"path":"\/documentation\/soulvercore\/unitexpression\/value","title":"let value: Decimal","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitexpression\/convertedto(unit:)","title":"func convertedTo(unit: UnitIdentifier) -> UnitExpression?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitexpression\/with(unit:and:)","title":"static func with(unit: UnitIdentifier, and: Decimal) -> UnitExpression","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitexpression\/'...(_:)-8cdlx","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/unitexpression\/'...(_:)-9j8d8","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/unitexpression\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/unitexpression\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/unitexpression\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/unitexpression\/_(_:_:)-4jsvz","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/unitexpression\/_(_:_:)-7rv8","title":"static func < (UnitExpression, UnitExpression) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/unitexpression\/_=(_:_:)-4f9ef","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/unitexpression\/_=(_:_:)-9xjbw","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/unitexpression\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitexpression\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/soulvercore\/unitexpression\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitexpression\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/unitexpression\/==(_:_:)","title":"static func == (UnitExpression, UnitExpression) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/unitexpression\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitexpression\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/unitexpression\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/unitexpression","title":"UnitExpression","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/scunit\/==(_:_:)","title":"static func == (SCUnit, SCUnit) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/scunit\/baseunit","title":"var baseUnit: SCUnit","type":"property"},{"path":"\/documentation\/soulvercore\/scunit\/baseunitvalue","title":"var baseUnitValue: Decimal","type":"property"},{"path":"\/documentation\/soulvercore\/scunit\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/soulvercore\/scunit\/identifier","title":"let identifier: UnitIdentifier","type":"property"},{"path":"\/documentation\/soulvercore\/scunit\/iscryptocurrency","title":"var isCryptoCurrency: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/scunit\/prefersthreedp","title":"var prefersThreeDP: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/scunit\/preferszerodp","title":"var prefersZeroDP: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/scunit\/symbol","title":"let symbol: String","type":"property"},{"path":"\/documentation\/soulvercore\/scunit\/unittype","title":"var unitType: UnitType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/scunit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/scunit\/baseunit()","title":"class func baseUnit() -> SCUnit","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/scunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/scunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/scunit","title":"SCUnit","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitrange\/lowerbound","title":"let lowerBound: Decimal","type":"property"},{"path":"\/documentation\/soulvercore\/unitrange\/unit","title":"let unit: SCUnit","type":"property"},{"path":"\/documentation\/soulvercore\/unitrange\/upperbound","title":"let upperBound: Decimal","type":"property"}],"path":"\/documentation\/soulvercore\/unitrange","title":"UnitRange","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.property","title":"let cardinalDirection: CardinalDirection?","type":"property"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/degrees","title":"let degrees: Decimal","type":"property"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/minutes","title":"let minutes: Decimal","type":"property"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/seconds","title":"let seconds: Decimal","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum\/east","title":"case east","type":"case"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum\/north","title":"case north","type":"case"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum\/south","title":"case south","type":"case"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum\/west","title":"case west","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/degreesminutesseconds\/cardinaldirection-swift.enum","title":"DegreesMinutesSeconds.CardinalDirection","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/degreesminutesseconds\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/degreesminutesseconds\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/degreesminutesseconds","title":"DegreesMinutesSeconds","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/gpscoordinates\/latitude","title":"var latitude: Double","type":"property"},{"path":"\/documentation\/soulvercore\/gpscoordinates\/longitude","title":"var longitude: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/gpscoordinates\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/gpscoordinates\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/gpscoordinates","title":"GPSCoordinates","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/substance\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/soulvercore\/substance\/ratevalue","title":"var rateValue: UnitRate","type":"property"},{"path":"\/documentation\/soulvercore\/substance\/value","title":"let value: Decimal","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/substance\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/substance\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/substance","title":"Substance","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitrate\/ofunit","title":"let ofUnit: SCUnit?","type":"property"},{"path":"\/documentation\/soulvercore\/unitrate\/perunit","title":"let perUnit: SCUnit","type":"property"},{"path":"\/documentation\/soulvercore\/unitrate\/value","title":"let value: Decimal","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitrate\/'...(_:)-8plvq","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/unitrate\/'...(_:)-fvkn","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/unitrate\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/unitrate\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/unitrate\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/soulvercore\/unitrate\/_(_:_:)-66tqn","title":"static func < (UnitRate, UnitRate) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/unitrate\/_(_:_:)-6vpuy","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/unitrate\/_=(_:_:)-7457a","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/unitrate\/_=(_:_:)-9gwrb","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/unitrate\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitrate\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/soulvercore\/unitrate\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitrate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/unitrate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/unitrate","title":"UnitRate","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/percentagerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/percentagerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/percentagerate","title":"PercentageRate","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/decimalrate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/decimalrate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/decimalrate","title":"DecimalRate","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datestamp\/date","title":"let date: Date","type":"property"},{"path":"\/documentation\/soulvercore\/datestamp\/hasexplicittimezone","title":"var hasExplicitTimeZone: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/datestamp\/timezone","title":"let timezone: TimeZone?","type":"property"},{"path":"\/documentation\/soulvercore\/datestamp\/type","title":"var type: Datestamp.DatestampType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datestamp\/datestampwith(date:oftype:intimezone:)","title":"static func datestampWith(date: Date, ofType: DatestampType, inTimezone: TimeZone?) -> Datestamp","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/clocktime","title":"case clockTime","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/dayandmonth","title":"case dayAndMonth","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/daymonthyear","title":"case dayMonthYear","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/daymonthyearandweekday","title":"case dayMonthYearAndWeekday","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/daymonthyearwithclocktimedowntominutes","title":"case dayMonthYearWithClockTimeDownToMinutes","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/daymonthyearwithclocktimedowntoseconds","title":"case dayMonthYearWithClockTimeDownToSeconds","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/daymonthyearwithclocktimedowntosubseconds","title":"case dayMonthYearWithClockTimeDownToSubSeconds","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/lastmonth","title":"case lastMonth","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/lastweek","title":"case lastWeek","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/lastyear","title":"case lastYear","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/monthandyear","title":"case monthAndYear","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/nakeddayofmonth","title":"case nakedDayOfMonth","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/nakedmonth","title":"case nakedMonth","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/nakedyear","title":"case nakedYear","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/nextmonth","title":"case nextMonth","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/nextweek","title":"case nextWeek","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/nextyear","title":"case nextYear","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/now","title":"case now","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/quarter","title":"case quarter","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/relativeweekday","title":"case relativeWeekday","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/specialday","title":"case specialDay","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/thismonth","title":"case thisMonth","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/thisweek","title":"case thisWeek","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/thisyear","title":"case thisYear","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/today","title":"case today","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/tomorrow","title":"case tomorrow","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/unixtimestamp","title":"case unixTimestamp","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/unspecified","title":"case unspecified","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/utctime","title":"case utcTime","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/weekday","title":"case weekDay","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/weekdaywithclocktime","title":"case weekdayWithClockTime","type":"case"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/yesterday","title":"case yesterday","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/calendarcomponentsrepresented","title":"var calendarComponentsRepresented: Set<Calendar.Component>","type":"property"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/hasdaycomponent","title":"var hasDayComponent: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/hasmonthcomponent","title":"var hasMonthComponent: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/hastimecomponent","title":"var hasTimeComponent: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/hasyearcomponent","title":"var hasYearComponent: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/isrelative","title":"var isRelative: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/largestunit","title":"var largestUnit: UnitIdentifier","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/relativetimetypes","title":"static let relativeTimeTypes: Set<Datestamp.DatestampType>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/datestamp\/datestamptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/datestamp\/datestamptype","title":"Datestamp.DatestampType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datestamp\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/datestamp\/==(_:_:)","title":"static func == (Datestamp, Datestamp) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/datestamp\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/datestamp","title":"Datestamp","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datespan\/dateintervalvalue","title":"var dateIntervalValue: DateInterval","type":"property"},{"path":"\/documentation\/soulvercore\/datespan\/enddate","title":"let endDate: Date","type":"property"},{"path":"\/documentation\/soulvercore\/datespan\/startdate","title":"let startDate: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datespan\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/datespan\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/datespan","title":"Datespan","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timespan\/datecomponents","title":"let dateComponents: DateComponents","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timespan\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/timespan\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/timespan","title":"Timespan","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/frametime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/frametime\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/frametime","title":"Frametime","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/laptime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/laptime\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/laptime","title":"Laptime","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timestamp\/decimalvalue","title":"let decimalValue: Decimal","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timestamp\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/timestamp\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/timestamp","title":"Timestamp","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/iso8601\/datestamp","title":"let datestamp: Datestamp","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/iso8601\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/iso8601\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/iso8601","title":"iso8601","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resolution\/height","title":"let height: Decimal","type":"property"},{"path":"\/documentation\/soulvercore\/resolution\/width","title":"let width: Decimal","type":"property"}],"path":"\/documentation\/soulvercore\/resolution","title":"Resolution","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/list\/members","title":"let members: [EvaluationResult]","type":"property"}],"path":"\/documentation\/soulvercore\/list","title":"List","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/pitch\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/pitch\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/pitch","title":"Pitch","type":"struct"},{"path":"\/documentation\/soulvercore\/pitchnotation","title":"PitchNotation","type":"typealias"},{"title":"Places (timezones)","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/place\/init(name:aliases:timezone:type:)","title":"init(name: String, aliases: [String]?, timeZone: TimeZone, type: PlaceType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/place\/aliases","title":"let aliases: [String]?","type":"property"},{"path":"\/documentation\/soulvercore\/place\/city","title":"var city: String?","type":"property"},{"path":"\/documentation\/soulvercore\/place\/country","title":"var country: String?","type":"property"},{"path":"\/documentation\/soulvercore\/place\/countrycode","title":"var countryCode: String?","type":"property"},{"path":"\/documentation\/soulvercore\/place\/gpscoordinates","title":"var gpsCoordinates: GPSCoordinates?","type":"property"},{"path":"\/documentation\/soulvercore\/place\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/soulvercore\/place\/timezone","title":"let timeZone: TimeZone","type":"property"},{"path":"\/documentation\/soulvercore\/place\/type","title":"let type: PlaceType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/place\/placetype\/airport(airport:)","title":"case airport(airport: Airport)","type":"case"},{"path":"\/documentation\/soulvercore\/place\/placetype\/city(city:)","title":"case city(city: City)","type":"case"},{"path":"\/documentation\/soulvercore\/place\/placetype\/country(country:)","title":"case country(country: Country)","type":"case"},{"path":"\/documentation\/soulvercore\/place\/placetype\/custom(customplace:)","title":"case custom(customPlace: CustomPlace)","type":"case"},{"path":"\/documentation\/soulvercore\/place\/placetype\/timezoneabbreviation","title":"case timeZoneAbbreviation","type":"case"},{"path":"\/documentation\/soulvercore\/place\/placetype\/unspecified","title":"case unspecified","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/place\/placetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/place\/placetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/place\/placetype","title":"Place.PlaceType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/place\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/place\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/place","title":"Place","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/airport\/iata_code","title":"let iata_code: String","type":"property"},{"path":"\/documentation\/soulvercore\/airport\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/airport\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/soulvercore\/airport\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/airport\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/airport\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/airport","title":"Airport","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/city\/country","title":"var country: String?","type":"property"},{"path":"\/documentation\/soulvercore\/city\/countrycode","title":"let countryCode: String","type":"property"},{"path":"\/documentation\/soulvercore\/city\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/soulvercore\/city\/latitude","title":"let latitude: String?","type":"property"},{"path":"\/documentation\/soulvercore\/city\/longitude","title":"let longitude: String?","type":"property"},{"path":"\/documentation\/soulvercore\/city\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/soulvercore\/city\/timezone","title":"var timeZone: TimeZone?","type":"property"},{"path":"\/documentation\/soulvercore\/city\/timezone_id","title":"let timezone_id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/city\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/soulvercore\/city\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/city\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/city\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/city","title":"City","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/country\/capital","title":"let capital: String","type":"property"},{"path":"\/documentation\/soulvercore\/country\/capitalcitytimezoneid","title":"let capitalCityTimezoneID: String?","type":"property"},{"path":"\/documentation\/soulvercore\/country\/code","title":"let code: String?","type":"property"},{"path":"\/documentation\/soulvercore\/country\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/soulvercore\/country\/timezone","title":"var timeZone: TimeZone?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/country\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/soulvercore\/country\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/country\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/country\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/country","title":"Country","type":"struct"},{"title":"Lines & sheets","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/init(_:)","title":"init(RawExpression)","type":"init"},{"title":"Key properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/expression","title":"var expression: RawExpression","type":"property"},{"path":"\/documentation\/soulvercore\/line\/parsedexpression","title":"var parsedExpression: TokenList?","type":"property"},{"path":"\/documentation\/soulvercore\/line\/result","title":"var result: CalculationResult?","type":"property"},{"path":"\/documentation\/soulvercore\/line\/formattedresult","title":"var formattedResult: String","type":"property"},{"path":"\/documentation\/soulvercore\/line\/rawresult","title":"var rawResult: String","type":"property"},{"title":"Customize behaviour & formatting","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/behaviour","title":"var behaviour: CalculationBehaviour","type":"property"},{"path":"\/documentation\/soulvercore\/line\/formattingpreferences","title":"var formattingPreferences: FormattingPreferences?","type":"property"},{"path":"\/documentation\/soulvercore\/line\/skipstatistics","title":"var skipStatistics: Bool","type":"property"},{"title":"Visual properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.property","title":"var expressionAlignment: ExpressionAlignment","type":"property"},{"title":"References & variables","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/linereference","title":"var lineReference: LineReference?","type":"property"},{"path":"\/documentation\/soulvercore\/line\/declaredvariable","title":"var declaredVariable: Variable?","type":"property"},{"path":"\/documentation\/soulvercore\/line\/variableenvironment","title":"var variableEnvironment: VariableList?","type":"property"},{"title":"Convenience getters","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.property","title":"var apparentLineType: ApparentLineType?","type":"property"},{"path":"\/documentation\/soulvercore\/line\/isheading","title":"var isHeading: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/line\/issubtotal","title":"var isSubtotal: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/line\/isdivider","title":"var isDivider: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/line\/iswaypoint","title":"var isWaypoint: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/line\/ispartoftrip","title":"var isPartOfTrip: Bool","type":"property"},{"title":"Attribution","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/attribution","title":"var attribution: String?","type":"property"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/statisticsoptions-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/statisticsoptions-swift.struct\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/line\/statisticsoptions-swift.struct\/skipstatistics","title":"var skipStatistics: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/line\/statisticsoptions-swift.struct\/statistictype","title":"var statisticType: StatisticType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/statisticsoptions-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/line\/statisticsoptions-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/line\/statisticsoptions-swift.struct","title":"Line.StatisticsOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/init()","title":"init()","type":"init"},{"path":"\/documentation\/soulvercore\/line\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/soulvercore\/line\/indexesreferencedinexpression","title":"var indexesReferencedInExpression: IndexSet","type":"property"},{"path":"\/documentation\/soulvercore\/line\/isrunningsubtotal","title":"var isRunningSubtotal: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/line\/lineindex","title":"var lineIndex: LineIndex?","type":"property"},{"path":"\/documentation\/soulvercore\/line\/referencableresult","title":"var referencableResult: CalculationResult?","type":"property"},{"path":"\/documentation\/soulvercore\/line\/statisticsoptions-swift.property","title":"var statisticsOptions: Line.StatisticsOptions","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/line\/highlightcolorfor(portion:)","title":"func highlightColorFor(portion: HighlightPortion) -> HighlightColor?","type":"method"},{"path":"\/documentation\/soulvercore\/line\/referencesinexpressionto(variable:)","title":"func referencesInExpressionTo(variable: Variable) -> [Token]","type":"method"},{"path":"\/documentation\/soulvercore\/line\/set(color:for:)","title":"func set(color: HighlightColor?, for: HighlightPortion)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/assertion","title":"case assertion","type":"case"},{"path":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/comment","title":"case comment","type":"case"},{"path":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/divider","title":"case divider","type":"case"},{"path":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/header","title":"case header","type":"case"},{"path":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/regular","title":"case regular","type":"case"},{"path":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/variabledeclaration","title":"case variableDeclaration","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/line\/apparentlinetype-swift.enum","title":"Line.ApparentLineType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/definesfunction","title":"case definesFunction","type":"case"},{"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/evaluatesexpression","title":"case evaluatesExpression","type":"case"},{"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/sumslinesabove","title":"case sumsLinesAbove","type":"case"},{"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/tripwaypoint","title":"case tripWaypoint","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/line\/calculationbehaviour\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/line\/calculationbehaviour","title":"Line.CalculationBehaviour","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/center","title":"case center","type":"case"},{"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/right","title":"case right","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/line\/expressionalignment-swift.enum","title":"Line.ExpressionAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/green","title":"case green","type":"case"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/grey","title":"case grey","type":"case"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/mint","title":"case mint","type":"case"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/orange","title":"case orange","type":"case"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/pink","title":"case pink","type":"case"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/purple","title":"case purple","type":"case"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/red","title":"case red","type":"case"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/yellow","title":"case yellow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/line\/highlightcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/line\/highlightcolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/line\/highlightcolor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/line\/highlightcolor","title":"Line.HighlightColor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightportion\/body","title":"case body","type":"case"},{"path":"\/documentation\/soulvercore\/line\/highlightportion\/head","title":"case head","type":"case"},{"path":"\/documentation\/soulvercore\/line\/highlightportion\/tail","title":"case tail","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightportion\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightportion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/line\/highlightportion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightportion\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightportion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/highlightportion\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/line\/highlightportion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/line\/highlightportion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/line\/highlightportion","title":"Line.HighlightPortion","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/soulvercore\/line\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/line\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/line\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/line","title":"Line","type":"struct"},{"path":"\/documentation\/soulvercore\/lineindex","title":"LineIndex","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linesheet\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linesheet\/copy","title":"var copy: LineSheet","type":"property"},{"path":"\/documentation\/soulvercore\/linesheet\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/soulvercore\/linesheet\/text","title":"var text: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linesheet\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linesheet\/subscript(_:)","title":"subscript(LineIndex) -> Line","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linesheet\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/linesheet\/==(_:_:)","title":"static func == (LineSheet, LineSheet) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/linesheet\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linesheet\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/linesheet\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/linesheet","title":"LineSheet","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linesheetdelta\/indexesadded","title":"let indexesAdded: IndexSet","type":"property"},{"path":"\/documentation\/soulvercore\/linesheetdelta\/indexesdeleted","title":"let indexesDeleted: IndexSet","type":"property"},{"path":"\/documentation\/soulvercore\/linesheetdelta\/indexesmodified","title":"let indexesModified: IndexSet","type":"property"},{"path":"\/documentation\/soulvercore\/linesheetdelta\/issinglelineedit","title":"var isSingleLineEdit: Bool","type":"property"}],"path":"\/documentation\/soulvercore\/linesheetdelta","title":"LineSheetDelta","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/==(_:_:)","title":"static func == (Subsheet, Subsheet) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/canreferencevariablesoutsidebody","title":"var canReferenceVariablesOutsideBody: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/subsheet\/evaluator","title":"let evaluator: SubsheetEvaluatorType","type":"property"},{"path":"\/documentation\/soulvercore\/subsheet\/identifier","title":"let identifier: LineReference","type":"property"},{"path":"\/documentation\/soulvercore\/subsheet\/linesheet","title":"let lineSheet: LineSheet","type":"property"},{"path":"\/documentation\/soulvercore\/subsheet\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/subsheet\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype\/javascript","title":"case javascript","type":"case"},{"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype\/soulvercore","title":"case soulverCore","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/subsheet\/subsheetevaluatortype","title":"Subsheet.SubsheetEvaluatorType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/subsheet\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/subsheet\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/subsheet","title":"Subsheet","type":"struct"},{"title":"Line references","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linereference\/init(uid:)","title":"init(UID: UID)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linereference\/uid","title":"let UID: UID","type":"property"},{"path":"\/documentation\/soulvercore\/linereference\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linereference\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/soulvercore\/linereference\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linereference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/linereference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/linereference","title":"LineReference","type":"struct"},{"path":"\/documentation\/soulvercore\/untokenizedlinereference","title":"let UntokenizedLineReference: String","type":"var"},{"path":"\/documentation\/soulvercore\/uid","title":"UID","type":"typealias"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/singlecharacteruidgenerator\/isuid(symbol:)","title":"class func isUID(symbol: PrivateUnicodeSymbol) -> Bool","type":"method"},{"path":"\/documentation\/soulvercore\/singlecharacteruidgenerator\/parameterindexfor(uid:)","title":"class func parameterIndexFor(UID: PrivateUnicodeSymbol) -> Int?","type":"method"}],"path":"\/documentation\/soulvercore\/singlecharacteruidgenerator","title":"SingleCharacterUIDGenerator","type":"class"},{"path":"\/documentation\/soulvercore\/privateunicodesymbol","title":"PrivateUnicodeSymbol","type":"typealias"},{"title":"Additional line collection options","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/allowsorphanedthousandsseparators","title":"var allowsOrphanedThousandsSeparators: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/autothousandsseparators","title":"var autoThousandsSeparators: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/collapsespaces","title":"var collapseSpaces: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/fancyminus","title":"var fancyMinus: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/fancytimes","title":"var fancyTimes: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/formatsslashcommentswithspaces","title":"var formatsSlashCommentsWithSpaces: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/padslashoperatorwherenecessary","title":"var padSlashOperatorWhereNecessary: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/padstandardoperators","title":"var padStandardOperators: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/quickoperators","title":"var quickOperators: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/usenonbreakingspacesinmultiwordvariables","title":"var useNonBreakingSpacesInMultiwordVariables: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/expressionbeautificationoptions\/defaults","title":"static var defaults: ExpressionBeautificationOptions","type":"property"}],"path":"\/documentation\/soulvercore\/expressionbeautificationoptions","title":"ExpressionBeautificationOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/commentingoptions\/init(bracketcomments:quotationmarkcomments:slashcomments:labelcomments:hashtags:)","title":"init(bracketComments: Bool, quotationMarkComments: Bool, slashComments: Bool, labelComments: Bool, hashTags: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/commentingoptions\/bracketcomments","title":"var bracketComments: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/commentingoptions\/hashtags","title":"var hashTags: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/commentingoptions\/labelcomments","title":"var labelComments: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/commentingoptions\/quotationmarkcomments","title":"var quotationMarkComments: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/commentingoptions\/slashcomments","title":"var slashComments: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/commentingoptions\/all","title":"static var all: CommentingOptions","type":"property"},{"path":"\/documentation\/soulvercore\/commentingoptions\/none","title":"static var none: CommentingOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/commentingoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/commentingoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/commentingoptions","title":"CommentingOptions","type":"struct"},{"title":"Line collection utilities","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionarchive\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionarchive\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/soulvercore\/linecollectionarchive","title":"LineCollectionArchive","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionarchiver\/archivefor(linecollection:)","title":"class func archiveFor(lineCollection: LineCollection) -> LineCollectionArchive","type":"method"},{"path":"\/documentation\/soulvercore\/linecollectionarchiver\/decode(encodedlinesheet:withcustomization:preferredlocale:defaultlineformatting:basevariables:evaluate:)","title":"class func decode(encodedLineSheet: Data, withCustomization: EngineCustomization, preferredLocale: Locale, defaultLineFormatting: FormattingPreferences?, baseVariables: VariableList?, evaluate: Bool) throws -> LineCollection","type":"method"},{"path":"\/documentation\/soulvercore\/linecollectionarchiver\/encode(linecollection:)","title":"class func encode(lineCollection: LineCollection) throws -> Data","type":"method"},{"path":"\/documentation\/soulvercore\/linecollectionarchiver\/linecollectionfrom(archive:withcustomization:preferredlocale:)","title":"class func lineCollectionFrom(archive: LineCollectionArchive, withCustomization: EngineCustomization, preferredLocale: Locale) -> LineCollection","type":"method"}],"path":"\/documentation\/soulvercore\/linecollectionarchiver","title":"LineCollectionArchiver","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionexporter\/exportoptions\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionexporter\/exportoptions\/includeanswers","title":"var includeAnswers: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionexporter\/exportoptions\/plaintextseparator","title":"var plainTextSeparator: String","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionexporter\/exportoptions\/substitutelinereferences","title":"var substituteLineReferences: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionexporter\/exportoptions\/useunformattedresults","title":"var useUnformattedResults: Bool","type":"property"}],"path":"\/documentation\/soulvercore\/linecollectionexporter\/exportoptions","title":"LineCollectionExporter.ExportOptions","type":"struct"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionexporter\/jsondatafor(linecollection:)","title":"class func jsonDataFor(lineCollection: LineCollection) -> Data?","type":"method"},{"path":"\/documentation\/soulvercore\/linecollectionexporter\/textfor(linecollection:options:)","title":"class func textFor(lineCollection: LineCollection, options: ExportOptions) -> String","type":"method"}],"path":"\/documentation\/soulvercore\/linecollectionexporter","title":"LineCollectionExporter","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectioncompletions\/completionsfor(textfragment:charindex:onlineatindex:in:)","title":"class func completionsFor(textFragment: String, charIndex: Int, onLineAtIndex: LineIndex, in: LineCollection) -> [String]","type":"method"}],"path":"\/documentation\/soulvercore\/linecollectioncompletions","title":"LineCollectionCompletions","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionfuser\/fusingtokensoftypes(_:from:)","title":"class func fusingTokensOfTypes(TokenTypeSet, from: LineCollection) -> LineCollection","type":"method"}],"path":"\/documentation\/soulvercore\/linecollectionfuser","title":"LineCollectionFuser","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/customdefinitions-swift.struct\/customfunctions","title":"let customFunctions: [CustomFunction]","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/customdefinitions-swift.struct\/customplaces","title":"let customPlaces: [Place]","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/customdefinitions-swift.struct\/customunits","title":"let customUnits: [CustomUnit]","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/customdefinitions-swift.struct\/customvariables","title":"let customVariables: [Variable]","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/customdefinitions-swift.struct\/inflectedcustomunits","title":"let inflectedCustomUnits: [CustomUnit]","type":"property"}],"path":"\/documentation\/soulvercore\/linecollectionreducer\/customdefinitions-swift.struct","title":"LineCollectionReducer.CustomDefinitions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/init(linecollection:)","title":"init(lineCollection: LineCollection)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/customdefinitions-swift.property","title":"var customDefinitions: CustomDefinitions","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/inflectcustomunits","title":"var inflectCustomUnits: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/locallydefinedunits","title":"var locallyDefinedUnits: [CustomUnit]","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/locallydefinedvariables","title":"var locallyDefinedVariables: [Variable]","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionreducer\/returnvalue","title":"var returnValue: CalculationResult","type":"property"}],"path":"\/documentation\/soulvercore\/linecollectionreducer","title":"LineCollectionReducer","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectiontrimmer\/trimmingtokensoftypes(_:from:)","title":"class func trimmingTokensOfTypes(TokenTypeSet, from: LineCollection) -> LineCollection","type":"method"}],"path":"\/documentation\/soulvercore\/linecollectiontrimmer","title":"LineCollectionTrimmer","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/linecollectionenumerationoptions\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/linecollectionenumerationoptions\/referencesubstitutionpolicy","title":"var referenceSubstitutionPolicy: ReferenceSubstituionPolicy","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/linecollectionenumerationoptions\/resultformatting","title":"var resultFormatting: ResultFormatting","type":"property"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/linecollectionenumerationoptions\/reversed","title":"var reversed: Bool","type":"property"}],"path":"\/documentation\/soulvercore\/linecollectionenumerator\/linecollectionenumerationoptions","title":"LineCollectionEnumerator.LineCollectionEnumerationOptions","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/enumerationexpression","title":"LineCollectionEnumerator.EnumerationExpression","type":"typealias"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/enumerationresult","title":"LineCollectionEnumerator.EnumerationResult","type":"typealias"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/linecollectionmodelenumerationhandler","title":"LineCollectionEnumerator.LineCollectionModelEnumerationHandler","type":"typealias"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/linecollectionstringenumerationhandler","title":"LineCollectionEnumerator.LineCollectionStringEnumerationHandler","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/enumeratemodelsin(linecollection:with:in:)","title":"class func enumerateModelsIn(lineCollection: LineCollection, with: LineCollectionEnumerationOptions, in: LineCollectionModelEnumerationHandler)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/enumeratestringsin(linecollection:with:in:)-8vhn","title":"class func enumerateStringsIn(lineCollection: LineCollection, with: LineCollectionEnumerationOptions, in: LineCollectionStringEnumerationHandler)","type":"method"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/enumeratestringsin(linecollection:with:in:)-9rs8t","title":"class func enumerateStringsIn<T>(lineCollection: LineCollection, with: LineCollectionEnumerationOptions, in: ((LineIndex, EnumerationExpression, EnumerationResult) -> T?)) -> T?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/referencesubstituionpolicy\/dontsubstitue","title":"case dontSubstitue","type":"case"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/referencesubstituionpolicy\/formattedresult","title":"case formattedResult","type":"case"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/referencesubstituionpolicy\/markdownlinkstyle","title":"case markdownLinkStyle","type":"case"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/referencesubstituionpolicy\/plaintextreference","title":"case plainTextReference","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/referencesubstituionpolicy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/linecollectionenumerator\/referencesubstituionpolicy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/linecollectionenumerator\/referencesubstituionpolicy","title":"LineCollectionEnumerator.ReferenceSubstituionPolicy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/resultformatting\/formatted","title":"case formatted","type":"case"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/resultformatting\/raw","title":"case raw","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectionenumerator\/resultformatting\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/linecollectionenumerator\/resultformatting\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/linecollectionenumerator\/resultformatting","title":"LineCollectionEnumerator.ResultFormatting","type":"enum"}],"path":"\/documentation\/soulvercore\/linecollectionenumerator","title":"LineCollectionEnumerator","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectioniterator\/next()","title":"func next() -> Line?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/linecollectioniterator\/element","title":"LineCollectionIterator.Element","type":"typealias"}],"path":"\/documentation\/soulvercore\/linecollectioniterator","title":"LineCollectionIterator","type":"class"},{"title":"Result utilities","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultcollection\/init(results:customization:formattingpreferences:)","title":"init(results: [CalculationResult], customization: EngineCustomization, formattingPreferences: FormattingPreferences?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultcollection\/average","title":"var average: CalculationResult?","type":"property"},{"path":"\/documentation\/soulvercore\/resultcollection\/count","title":"var count: CalculationResult?","type":"property"},{"path":"\/documentation\/soulvercore\/resultcollection\/customization","title":"let customization: EngineCustomization","type":"property"},{"path":"\/documentation\/soulvercore\/resultcollection\/formattingpreferences","title":"let formattingPreferences: FormattingPreferences?","type":"property"},{"path":"\/documentation\/soulvercore\/resultcollection\/results","title":"let results: [CalculationResult]","type":"property"},{"path":"\/documentation\/soulvercore\/resultcollection\/resultsareempty","title":"var resultsAreEmpty: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/resultcollection\/sum","title":"var sum: CalculationResult?","type":"property"}],"path":"\/documentation\/soulvercore\/resultcollection","title":"ResultCollection","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultpercentagecalculator\/init(customization:)","title":"init(customization: EngineCustomization)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultpercentagecalculator\/percentagechange(start:end:percentageformattingpreferences:)","title":"func percentageChange(start: CalculationResult, end: CalculationResult, percentageFormattingPreferences: FormattingPreferences?) -> CalculationResult?","type":"method"},{"path":"\/documentation\/soulvercore\/resultpercentagecalculator\/percentageof(calculationresult:whole:percentageformattingpreferences:)","title":"func percentageOf(calculationResult: CalculationResult, whole: CalculationResult, percentageFormattingPreferences: FormattingPreferences?) -> CalculationResult?","type":"method"}],"path":"\/documentation\/soulvercore\/resultpercentagecalculator","title":"ResultPercentageCalculator","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultcontextualmetadata\/humanreadablemetadatafor(formattedresult:customization:)","title":"class func humanReadableMetadataFor(formattedResult: CalculationResult, customization: EngineCustomization) -> String?","type":"method"}],"path":"\/documentation\/soulvercore\/resultcontextualmetadata","title":"ResultContextualMetadata","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultoperations\/init(customization:formattingpreferences:)","title":"init(customization: EngineCustomization, formattingPreferences: FormattingPreferences?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/resultoperations\/add(leftside:rightside:)","title":"func add(leftSide: CalculationResult, rightSide: CalculationResult) -> CalculationResult?","type":"method"},{"path":"\/documentation\/soulvercore\/resultoperations\/negate(calculationresult:)","title":"func negate(calculationResult: CalculationResult) -> CalculationResult?","type":"method"},{"path":"\/documentation\/soulvercore\/resultoperations\/subtract(rightside:from:)","title":"func subtract(rightSide: CalculationResult, from: CalculationResult) -> CalculationResult?","type":"method"}],"path":"\/documentation\/soulvercore\/resultoperations","title":"ResultOperations","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/alternativeresultgenerator\/init(customization:formattingpreferences:)","title":"init(customization: EngineCustomization, formattingPreferences: FormattingPreferences?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/alternativeresultgenerator\/alternativeresultsfor(result:)","title":"func alternativeResultsFor(result: CalculationResult) -> [AlternativeResult]","type":"method"}],"path":"\/documentation\/soulvercore\/alternativeresultgenerator","title":"AlternativeResultGenerator","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/alternativeresult\/calculationresult","title":"let calculationResult: CalculationResult","type":"property"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.property","title":"let format: Format","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/binary","title":"case binary","type":"case"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/decimal","title":"case decimal","type":"case"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/fraction","title":"case fraction","type":"case"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/hexadecimal","title":"case hexadecimal","type":"case"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/humanreadabledate","title":"case humanReadableDate","type":"case"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/laptime","title":"case laptime","type":"case"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/octal","title":"case octal","type":"case"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/scientificnotation","title":"case scientificNotation","type":"case"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/timespan","title":"case timespan","type":"case"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/timestamp","title":"case timestamp","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/alternativeresult\/format-swift.enum","title":"AlternativeResult.Format","type":"enum"}],"path":"\/documentation\/soulvercore\/alternativeresult","title":"AlternativeResult","type":"struct"},{"title":"Custom function support","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customfunction\/init(prototypeexpression:handler:)","title":"init(prototypeExpression: PrototypeExpression, handler: CustomFunctionHandler)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customfunction\/aliases","title":"var aliases: [PrototypeExpression]?","type":"property"},{"path":"\/documentation\/soulvercore\/customfunction\/backgroundhandler","title":"var backgroundHandler: BackgroundCustomFunctionHandler?","type":"property"},{"path":"\/documentation\/soulvercore\/customfunction\/customtypes","title":"var customTypes: [CustomType]?","type":"property"},{"path":"\/documentation\/soulvercore\/customfunction\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/soulvercore\/customfunction\/prerequisitetypes","title":"var prerequisiteTypes: TokenTypeSet?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customfunction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/customfunction\/==(_:_:)","title":"static func == (CustomFunction, CustomFunction) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/customfunction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customfunction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/customfunction\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/customfunction","title":"CustomFunction","type":"struct"},{"path":"\/documentation\/soulvercore\/customfunctionhandler","title":"CustomFunctionHandler","type":"typealias"},{"path":"\/documentation\/soulvercore\/prototypeexpression","title":"PrototypeExpression","type":"typealias"},{"path":"\/documentation\/soulvercore\/backgroundcustomfunctionhandler","title":"BackgroundCustomFunctionHandler","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customtype\/init(prototypeplaceholder:symbols:associatedobject:)","title":"init(prototypePlaceholder: PrototypePlaceholder, symbols: [String], associatedObject: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customtype\/associatedobject","title":"let associatedObject: Any?","type":"property"},{"path":"\/documentation\/soulvercore\/customtype\/prototypeplaceholder","title":"let prototypePlaceholder: PrototypePlaceholder","type":"property"},{"path":"\/documentation\/soulvercore\/customtype\/symbols","title":"let symbols: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/soulvercore\/customtype\/==(_:_:)","title":"static func == (CustomType, CustomType) -> Bool","type":"op"}],"path":"\/documentation\/soulvercore\/customtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/soulvercore\/customtype\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/customtype","title":"CustomType","type":"struct"},{"path":"\/documentation\/soulvercore\/prototypeplaceholder","title":"PrototypePlaceholder","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customfunctiondefinitionutility\/init(customization:)","title":"init(customization: EngineCustomization)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customfunctiondefinitionutility\/customfunctionfrom(customfunctiondefinition:implementationbody:)","title":"func customFunctionFrom(customFunctionDefinition: RawExpression, implementationBody: LineSheet) -> CustomFunction?","type":"method"},{"path":"\/documentation\/soulvercore\/customfunctiondefinitionutility\/parametersin(customfunctiondefinition:)","title":"func parametersIn(customFunctionDefinition: RawExpression) -> [CustomFunctionParameter]?","type":"method"},{"path":"\/documentation\/soulvercore\/customfunctiondefinitionutility\/prototypeexpressionfrom(customfunctiondefinition:)","title":"func prototypeExpressionFrom(customFunctionDefinition: RawExpression) -> PrototypeExpression?","type":"method"}],"path":"\/documentation\/soulvercore\/customfunctiondefinitionutility","title":"CustomFunctionDefinitionUtility","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/customfunctionparameter\/matchedtoken","title":"let matchedToken: Token","type":"property"},{"path":"\/documentation\/soulvercore\/customfunctionparameter\/subsheet","title":"let subsheet: Subsheet","type":"property"}],"path":"\/documentation\/soulvercore\/customfunctionparameter","title":"CustomFunctionParameter","type":"struct"},{"title":"String parsing extension support","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datapoint\/init(parser:)","title":"init(parser: T)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datapoint\/airport","title":"static var airport: DataPoint<AirportFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/angle","title":"static var angle: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/area","title":"static var area: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/binarynumber","title":"static var binaryNumber: DataPoint<BinaryNumberFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/boolean","title":"static var boolean: DataPoint<BooleanFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/currency","title":"static var currency: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/currencycode","title":"static var currencyCode: DataPoint<CurrencyCodeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/date","title":"static var date: DataPoint<DateFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/distance","title":"static var distance: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/emailaddress","title":"static var emailAddress: DataPoint<EmailFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/filesize","title":"static var fileSize: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/filetransferspeed","title":"static var fileTransferSpeed: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/frequency","title":"static var frequency: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/fuelconsumption","title":"static var fuelConsumption: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/fueleconomy","title":"static var fuelEconomy: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/hashtag","title":"static var hashtag: DataPoint<HashtagFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/hexnumber","title":"static var hexNumber: DataPoint<HexNumberFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/iso8601","title":"static var iso8601: DataPoint<iso8601FromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/laptime","title":"static var laptime: DataPoint<LaptimeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/number","title":"static var number: DataPoint<NumberFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/octalnumber","title":"static var octalNumber: DataPoint<OctalNumberFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/percentage","title":"static var percentage: DataPoint<PercentageFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/pitch","title":"static var pitch: DataPoint<PitchFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/place","title":"static var place: DataPoint<PlaceFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/power","title":"static var power: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/pressure","title":"static var pressure: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/screenresolution","title":"static var screenResolution: DataPoint<ScreenResolutionFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/speed","title":"static var speed: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/substance","title":"static var substance: DataPoint<SubstanceFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/temperature","title":"static var temperature: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/time","title":"static var time: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/timezone","title":"static var timeZone: DataPoint<TimeZoneFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/timecode","title":"static var timecode: DataPoint<TimecodeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/timespan","title":"static var timespan: DataPoint<TimespanFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/unixtimestamp","title":"static var unixTimestamp: DataPoint<UnixTimestampFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/url","title":"static var url: DataPoint<URLFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/volume","title":"static var volume: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/weight","title":"static var weight: DataPoint<UnitOfTypeFromTokenParser>","type":"property"},{"path":"\/documentation\/soulvercore\/datapoint\/whitespace","title":"static var whitespace: DataPoint<WhitespaceFromTokenParser>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datapoint\/unitof(_:)","title":"static func unitOf(UnitType) -> DataPoint<UnitOfTypeFromTokenParser>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datapoint\/consuming(_:startingat:in:)","title":"func consuming(String, startingAt: String.Index, in: Range<String.Index>) throws -> (upperBound: String.Index, output: T.DataType)?","type":"method"}],"path":"\/documentation\/soulvercore\/datapoint\/customconsumingregexcomponent-implementations","title":"CustomConsumingRegexComponent Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datapoint\/regex","title":"var regex: Regex<Self.RegexOutput>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datapoint\/regexoutput","title":"DataPoint.RegexOutput","type":"typealias"}],"path":"\/documentation\/soulvercore\/datapoint\/regexcomponent-implementations","title":"RegexComponent Implementations","type":"symbol"}],"path":"\/documentation\/soulvercore\/datapoint","title":"DataPoint","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datafromtokenparser\/datatype","title":"DataType","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datafromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: SoulverCore.Token) -> DataType?","type":"method"}],"path":"\/documentation\/soulvercore\/datafromtokenparser","title":"DataFromTokenParser","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datefromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: SoulverCore.Token) -> DataType?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/datefromtokenparser\/datatype","title":"DateFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/datefromtokenparser","title":"DateFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/numberfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: SoulverCore.Token) -> DataType?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/numberfromtokenparser\/datatype","title":"NumberFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/numberfromtokenparser","title":"NumberFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/whitespacefromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: SoulverCore.Token) -> DataType?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/whitespacefromtokenparser\/datatype","title":"WhitespaceFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/whitespacefromtokenparser","title":"WhitespaceFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/binarynumberfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> UInt?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/binarynumberfromtokenparser\/datatype","title":"BinaryNumberFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/binarynumberfromtokenparser","title":"BinaryNumberFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/octalnumberfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> UInt?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/octalnumberfromtokenparser\/datatype","title":"OctalNumberFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/octalnumberfromtokenparser","title":"OctalNumberFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/hexnumberfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> UInt?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/hexnumberfromtokenparser\/datatype","title":"HexNumberFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/hexnumberfromtokenparser","title":"HexNumberFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/booleanfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Bool?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/booleanfromtokenparser\/datatype","title":"BooleanFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/booleanfromtokenparser","title":"BooleanFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/percentagefromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: SoulverCore.Token) -> DataType?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/percentagefromtokenparser\/datatype","title":"PercentageFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/percentagefromtokenparser","title":"PercentageFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/currencycodefromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> CurrencyCode?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/currencycodefromtokenparser\/datatype","title":"CurrencyCodeFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/currencycodefromtokenparser","title":"CurrencyCodeFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/substancefromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Substance?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/substancefromtokenparser\/datatype","title":"SubstanceFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/substancefromtokenparser","title":"SubstanceFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitoftypefromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> UnitExpression?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unitoftypefromtokenparser\/datatype","title":"UnitOfTypeFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/unitoftypefromtokenparser","title":"UnitOfTypeFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/laptimefromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Laptime?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/laptimefromtokenparser\/datatype","title":"LaptimeFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/laptimefromtokenparser","title":"LaptimeFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/iso8601fromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Date?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/iso8601fromtokenparser\/datatype","title":"iso8601FromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/iso8601fromtokenparser","title":"iso8601FromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timecodefromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Frametime?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timecodefromtokenparser\/datatype","title":"TimecodeFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/timecodefromtokenparser","title":"TimecodeFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timespanfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Timespan?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timespanfromtokenparser\/datatype","title":"TimespanFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/timespanfromtokenparser","title":"TimespanFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unixtimestampfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> TimeInterval?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/unixtimestampfromtokenparser\/datatype","title":"UnixTimestampFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/unixtimestampfromtokenparser","title":"UnixTimestampFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/pitchfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Pitch?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/pitchfromtokenparser\/datatype","title":"PitchFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/pitchfromtokenparser","title":"PitchFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/screenresolutionfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Resolution?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/screenresolutionfromtokenparser\/datatype","title":"ScreenResolutionFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/screenresolutionfromtokenparser","title":"ScreenResolutionFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timezonefromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Place?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/timezonefromtokenparser\/datatype","title":"TimeZoneFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/timezonefromtokenparser","title":"TimeZoneFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/placefromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Place?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/placefromtokenparser\/datatype","title":"PlaceFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/placefromtokenparser","title":"PlaceFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/airportfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> Place?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/airportfromtokenparser\/datatype","title":"AirportFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/airportfromtokenparser","title":"AirportFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/emailfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: SoulverCore.Token) -> DataType?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/emailfromtokenparser\/datatype","title":"EmailFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/emailfromtokenparser","title":"EmailFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/urlfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: SoulverCore.Token) -> DataType?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/urlfromtokenparser\/datatype","title":"URLFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/urlfromtokenparser","title":"URLFromTokenParser","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/hashtagfromtokenparser\/parsedatafrom(token:)","title":"func parseDataFrom(token: Token) -> String?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/hashtagfromtokenparser\/datatype","title":"HashtagFromTokenParser.DataType","type":"typealias"}],"path":"\/documentation\/soulvercore\/hashtagfromtokenparser","title":"HashtagFromTokenParser","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/swift\/collection\/find(_:_:_:_:_:_:locale:)","title":"func find<T, U, V, W, X, Y>(DataPoint<T>, DataPoint<U>, DataPoint<V>, DataPoint<W>, DataPoint<X>, DataPoint<Y>, locale: Locale) -> [(T.DataType, U.DataType, V.DataType, W.DataType, X.DataType, Y.DataType)]","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/collection\/find(_:_:_:_:_:locale:)","title":"func find<T, U, V, W, X>(DataPoint<T>, DataPoint<U>, DataPoint<V>, DataPoint<W>, DataPoint<X>, locale: Locale) -> [(T.DataType, U.DataType, V.DataType, W.DataType, X.DataType)]","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/collection\/find(_:_:_:_:locale:)","title":"func find<T, U, V, W>(DataPoint<T>, DataPoint<U>, DataPoint<V>, DataPoint<W>, locale: Locale) -> [(T.DataType, U.DataType, V.DataType, W.DataType)]","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/collection\/find(_:_:_:locale:)","title":"func find<T, U, Y>(DataPoint<T>, DataPoint<U>, DataPoint<Y>, locale: Locale) -> [(T.DataType, U.DataType, Y.DataType)]","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/collection\/find(_:_:locale:)","title":"func find<T, U>(DataPoint<T>, DataPoint<U>, locale: Locale) -> [(T.DataType, U.DataType)]","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/collection\/find(_:locale:)","title":"func find<T>(DataPoint<T>, locale: Locale) -> [T.DataType]","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/collection\/replacingall(_:locale:replacement:)","title":"func replacingAll<T>(DataPoint<T>, locale: Locale, replacement: ((T.DataType) -> String?)) -> [String]","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/collection\/replacingfirst(_:locale:replacement:)","title":"func replacingFirst<T>(DataPoint<T>, locale: Locale, replacement: ((T.DataType) -> String?)) -> [String]","type":"method"}],"path":"\/documentation\/soulvercore\/swift\/collection","title":"Collection","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/swift\/string\/datevalue","title":"var dateValue: Date?","type":"property"},{"path":"\/documentation\/soulvercore\/swift\/string\/isphrase","title":"var isPhrase: Bool","type":"property"},{"path":"\/documentation\/soulvercore\/swift\/string\/issingleword","title":"var isSingleWord: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/soulvercore\/swift\/string\/find(_:_:_:_:_:_:locale:)","title":"func find<T, U, V, W, X, Y>(DataPoint<T>, DataPoint<U>, DataPoint<V>, DataPoint<W>, DataPoint<X>, DataPoint<Y>, locale: Locale) -> (T.DataType, U.DataType, V.DataType, W.DataType, X.DataType, Y.DataType)?","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/string\/find(_:_:_:_:_:locale:)","title":"func find<T, U, V, W, X>(DataPoint<T>, DataPoint<U>, DataPoint<V>, DataPoint<W>, DataPoint<X>, locale: Locale) -> (T.DataType, U.DataType, V.DataType, W.DataType, X.DataType)?","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/string\/find(_:_:_:_:locale:)","title":"func find<T, U, V, W>(DataPoint<T>, DataPoint<U>, DataPoint<V>, DataPoint<W>, locale: Locale) -> (T.DataType, U.DataType, V.DataType, W.DataType)?","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/string\/find(_:_:_:locale:)","title":"func find<T, U, Y>(DataPoint<T>, DataPoint<U>, DataPoint<Y>, locale: Locale) -> (T.DataType, U.DataType, Y.DataType)?","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/string\/find(_:_:locale:)","title":"func find<T, U>(DataPoint<T>, DataPoint<U>, locale: Locale) -> (T.DataType, U.DataType)?","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/string\/find(_:locale:)","title":"func find<T>(DataPoint<T>, locale: Locale) -> T.DataType?","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/string\/replacingall(_:locale:replacement:)","title":"func replacingAll<T>(DataPoint<T>, locale: Locale, replacement: ((T.DataType) -> String?)) -> String","type":"method"},{"path":"\/documentation\/soulvercore\/swift\/string\/replacingfirst(_:locale:replacement:)","title":"func replacingFirst<T>(DataPoint<T>, locale: Locale, replacement: ((T.DataType) -> String?)) -> String","type":"method"}],"path":"\/documentation\/soulvercore\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/soulvercore\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/soulvercore","title":"SoulverCore","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}